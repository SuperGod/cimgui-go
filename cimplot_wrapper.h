#pragma once

#include "cimplot/cimplot.h"

#ifdef __cplusplus
extern "C" {
#endif

extern void PlotAlignmentData_Begin(ImPlotAlignmentData* self);
extern void PlotAlignmentData_End(ImPlotAlignmentData* self);
extern ImPlotAlignmentData* PlotAlignmentData_ImPlotAlignmentData();
extern void PlotAlignmentData_Reset(ImPlotAlignmentData* self);
extern void PlotAlignmentData_Update(ImPlotAlignmentData* self,float* pad_a,float* pad_b,float* delta_a,float* delta_b);
extern void PlotAlignmentData_Destroy(ImPlotAlignmentData* self);
extern void PlotAnnotationCollection_Append(ImPlotAnnotationCollection* self,const ImVec2 pos,const ImVec2 off,ImU32 bg,ImU32 fg,bool clamp,const char* fmt);
extern const char* PlotAnnotationCollection_GetText(ImPlotAnnotationCollection* self,int idx);
extern ImPlotAnnotationCollection* PlotAnnotationCollection_ImPlotAnnotationCollection();
extern void PlotAnnotationCollection_Reset(ImPlotAnnotationCollection* self);
extern void PlotAnnotationCollection_Destroy(ImPlotAnnotationCollection* self);
extern void PlotAxis_ApplyFit(ImPlotAxis* self,float padding);
extern bool PlotAxis_CanInitFit(ImPlotAxis* self);
extern void PlotAxis_Constrain(ImPlotAxis* self);
extern void PlotAxis_ExtendFit(ImPlotAxis* self,double v);
extern void PlotAxis_ExtendFitWith(ImPlotAxis* self,ImPlotAxis* alt,double v,double v_alt);
extern double PlotAxis_GetAspect(ImPlotAxis* self);
extern bool PlotAxis_HasGridLines(ImPlotAxis* self);
extern bool PlotAxis_HasLabel(ImPlotAxis* self);
extern bool PlotAxis_HasMenus(ImPlotAxis* self);
extern bool PlotAxis_HasTickLabels(ImPlotAxis* self);
extern bool PlotAxis_HasTickMarks(ImPlotAxis* self);
extern ImPlotAxis* PlotAxis_ImPlotAxis();
extern bool PlotAxis_IsAutoFitting(ImPlotAxis* self);
extern bool PlotAxis_IsForeground(ImPlotAxis* self);
extern bool PlotAxis_IsInputLocked(ImPlotAxis* self);
extern bool PlotAxis_IsInputLockedMax(ImPlotAxis* self);
extern bool PlotAxis_IsInputLockedMin(ImPlotAxis* self);
extern bool PlotAxis_IsInverted(ImPlotAxis* self);
extern bool PlotAxis_IsLocked(ImPlotAxis* self);
extern bool PlotAxis_IsLockedMax(ImPlotAxis* self);
extern bool PlotAxis_IsLockedMin(ImPlotAxis* self);
extern bool PlotAxis_IsOpposite(ImPlotAxis* self);
extern bool PlotAxis_IsPanLocked(ImPlotAxis* self,bool increasing);
extern bool PlotAxis_IsRangeLocked(ImPlotAxis* self);
extern float PlotAxis_PixelSize(ImPlotAxis* self);
extern double PlotAxis_PixelsToPlot(ImPlotAxis* self,float pix);
extern float PlotAxis_PlotToPixels(ImPlotAxis* self,double plt);
extern void PlotAxis_PullLinks(ImPlotAxis* self);
extern void PlotAxis_PushLinks(ImPlotAxis* self);
extern void PlotAxis_Reset(ImPlotAxis* self);
extern void PlotAxis_SetAspect(ImPlotAxis* self,double unit_per_pix);
extern bool PlotAxis_SetMaxV(ImPlotAxis* self,double _max,bool force);
extern bool PlotAxis_SetMinV(ImPlotAxis* self,double _min,bool force);
extern void PlotAxis_SetRange_PlotRange(ImPlotAxis* self,const ImPlotRange range);
extern void PlotAxis_SetRange_double(ImPlotAxis* self,double v1,double v2);
extern void PlotAxis_UpdateTransformCache(ImPlotAxis* self);
extern bool PlotAxis_WillRender(ImPlotAxis* self);
extern void PlotAxis_Destroy(ImPlotAxis* self);
extern int PlotColormapData_Append(ImPlotColormapData* self,const char* name,const ImU32* keys,int count,bool qual);
extern ImPlotColormap PlotColormapData_GetIndex(ImPlotColormapData* self,const char* name);
extern ImU32 PlotColormapData_GetKeyColor(ImPlotColormapData* self,ImPlotColormap cmap,int idx);
extern int PlotColormapData_GetKeyCount(ImPlotColormapData* self,ImPlotColormap cmap);
extern const ImU32* PlotColormapData_GetKeys(ImPlotColormapData* self,ImPlotColormap cmap);
extern const char* PlotColormapData_GetName(ImPlotColormapData* self,ImPlotColormap cmap);
extern const ImU32* PlotColormapData_GetTable(ImPlotColormapData* self,ImPlotColormap cmap);
extern ImU32 PlotColormapData_GetTableColor(ImPlotColormapData* self,ImPlotColormap cmap,int idx);
extern int PlotColormapData_GetTableSize(ImPlotColormapData* self,ImPlotColormap cmap);
extern ImPlotColormapData* PlotColormapData_ImPlotColormapData();
extern bool PlotColormapData_IsQual(ImPlotColormapData* self,ImPlotColormap cmap);
extern ImU32 PlotColormapData_LerpTable(ImPlotColormapData* self,ImPlotColormap cmap,float t);
extern void PlotColormapData_RebuildTables(ImPlotColormapData* self);
extern void PlotColormapData_SetKeyColor(ImPlotColormapData* self,ImPlotColormap cmap,int idx,ImU32 value);
extern void PlotColormapData_Destroy(ImPlotColormapData* self);
extern ImPlotDateTimeSpec* PlotDateTimeSpec_ImPlotDateTimeSpec_Nil();
extern ImPlotDateTimeSpec* PlotDateTimeSpec_ImPlotDateTimeSpec_PlotDateFmt(ImPlotDateFmt date_fmt,ImPlotTimeFmt time_fmt,bool use_24_hr_clk,bool use_iso_8601);
extern void PlotDateTimeSpec_Destroy(ImPlotDateTimeSpec* self);
extern ImPlotInputMap* PlotInputMap_ImPlotInputMap();
extern void PlotInputMap_Destroy(ImPlotInputMap* self);
extern ImPlotItem* PlotItemGroup_GetItemByIndex(ImPlotItemGroup* self,int i);
extern int PlotItemGroup_GetItemCount(ImPlotItemGroup* self);
extern ImGuiID PlotItemGroup_GetItemID(ImPlotItemGroup* self,const char* label_id);
extern int PlotItemGroup_GetItemIndex(ImPlotItemGroup* self,ImPlotItem* item);
extern ImPlotItem* PlotItemGroup_GetItem_ID(ImPlotItemGroup* self,ImGuiID id);
extern ImPlotItem* PlotItemGroup_GetItem_Str(ImPlotItemGroup* self,const char* label_id);
extern int PlotItemGroup_GetLegendCount(ImPlotItemGroup* self);
extern ImPlotItem* PlotItemGroup_GetLegendItem(ImPlotItemGroup* self,int i);
extern const char* PlotItemGroup_GetLegendLabel(ImPlotItemGroup* self,int i);
extern ImPlotItem* PlotItemGroup_GetOrAddItem(ImPlotItemGroup* self,ImGuiID id);
extern ImPlotItemGroup* PlotItemGroup_ImPlotItemGroup();
extern void PlotItemGroup_Reset(ImPlotItemGroup* self);
extern void PlotItemGroup_Destroy(ImPlotItemGroup* self);
extern ImPlotItem* PlotItem_ImPlotItem();
extern void PlotItem_Destroy(ImPlotItem* self);
extern ImPlotLegend* PlotLegend_ImPlotLegend();
extern void PlotLegend_Reset(ImPlotLegend* self);
extern void PlotLegend_Destroy(ImPlotLegend* self);
extern ImPlotNextItemData* PlotNextItemData_ImPlotNextItemData();
extern void PlotNextItemData_Reset(ImPlotNextItemData* self);
extern void PlotNextItemData_Destroy(ImPlotNextItemData* self);
extern ImPlotNextPlotData* PlotNextPlotData_ImPlotNextPlotData();
extern void PlotNextPlotData_Reset(ImPlotNextPlotData* self);
extern void PlotNextPlotData_Destroy(ImPlotNextPlotData* self);
extern void PlotPlot_ClearTextBuffer(ImPlotPlot* self);
extern int PlotPlot_EnabledAxesX(ImPlotPlot* self);
extern int PlotPlot_EnabledAxesY(ImPlotPlot* self);
extern const char* PlotPlot_GetAxisLabel(ImPlotPlot* self,const ImPlotAxis axis);
extern const char* PlotPlot_GetTitle(ImPlotPlot* self);
extern bool PlotPlot_HasTitle(ImPlotPlot* self);
extern ImPlotPlot* PlotPlot_ImPlotPlot();
extern bool PlotPlot_IsInputLocked(ImPlotPlot* self);
extern void PlotPlot_SetAxisLabel(ImPlotPlot* self,ImPlotAxis* axis,const char* label);
extern void PlotPlot_SetTitle(ImPlotPlot* self,const char* title);
extern ImPlotAxis* PlotPlot_XAxis_Nil(ImPlotPlot* self,int i);
extern ImPlotAxis* PlotPlot_YAxis_Nil(ImPlotPlot* self,int i);
extern void PlotPlot_Destroy(ImPlotPlot* self);
extern ImPlotPointError* PlotPointError_ImPlotPointError(double x,double y,double neg,double pos);
extern void PlotPointError_Destroy(ImPlotPointError* self);
extern ImPlotPoint* PlotPoint_ImPlotPoint_Nil();
extern ImPlotPoint* PlotPoint_ImPlotPoint_Vec2(const ImVec2 p);
extern ImPlotPoint* PlotPoint_ImPlotPoint_double(double _x,double _y);
extern void PlotPoint_Destroy(ImPlotPoint* self);
extern double PlotRange_Clamp(ImPlotRange* self,double value);
extern bool PlotRange_Contains(ImPlotRange* self,double value);
extern ImPlotRange* PlotRange_ImPlotRange_Nil();
extern ImPlotRange* PlotRange_ImPlotRange_double(double _min,double _max);
extern double PlotRange_Size(ImPlotRange* self);
extern void PlotRange_Destroy(ImPlotRange* self);
extern void PlotRect_Clamp_PlotPoInt(ImPlotPoint *pOut,ImPlotRect* self,const ImPlotPoint p);
extern void PlotRect_Clamp_double(ImPlotPoint *pOut,ImPlotRect* self,double x,double y);
extern bool PlotRect_Contains_PlotPoInt(ImPlotRect* self,const ImPlotPoint p);
extern bool PlotRect_Contains_double(ImPlotRect* self,double x,double y);
extern ImPlotRect* PlotRect_ImPlotRect_Nil();
extern ImPlotRect* PlotRect_ImPlotRect_double(double x_min,double x_max,double y_min,double y_max);
extern void PlotRect_Max(ImPlotPoint *pOut,ImPlotRect* self);
extern void PlotRect_Min(ImPlotPoint *pOut,ImPlotRect* self);
extern void PlotRect_Size(ImPlotPoint *pOut,ImPlotRect* self);
extern void PlotRect_Destroy(ImPlotRect* self);
extern ImPlotStyle* PlotStyle_ImPlotStyle();
extern void PlotStyle_Destroy(ImPlotStyle* self);
extern ImPlotSubplot* PlotSubplot_ImPlotSubplot();
extern void PlotSubplot_Destroy(ImPlotSubplot* self);
extern void PlotTagCollection_Append(ImPlotTagCollection* self,ImAxis axis,double value,ImU32 bg,ImU32 fg,const char* fmt);
extern const char* PlotTagCollection_GetText(ImPlotTagCollection* self,int idx);
extern ImPlotTagCollection* PlotTagCollection_ImPlotTagCollection();
extern void PlotTagCollection_Reset(ImPlotTagCollection* self);
extern void PlotTagCollection_Destroy(ImPlotTagCollection* self);
extern ImPlotTick* PlotTick_ImPlotTick(double value,bool major,int level,bool show_label);
extern void PlotTick_Destroy(ImPlotTick* self);
extern ImPlotTick* PlotTicker_AddTick_PlotTick(ImPlotTicker* self,ImPlotTick tick);
extern ImPlotTick* PlotTicker_AddTick_doublePlotFormatter(ImPlotTicker* self,double value,bool major,int level,bool show_label,ImPlotFormatter formatter,void* data);
extern ImPlotTick* PlotTicker_AddTick_doubleStr(ImPlotTicker* self,double value,bool major,int level,bool show_label,const char* label);
extern const char* PlotTicker_GetText_Int(ImPlotTicker* self,int idx);
extern const char* PlotTicker_GetText_PlotTick(ImPlotTicker* self,const ImPlotTick tick);
extern ImPlotTicker* PlotTicker_ImPlotTicker();
extern void PlotTicker_OverrideSizeLate(ImPlotTicker* self,const ImVec2 size);
extern void PlotTicker_Reset(ImPlotTicker* self);
extern int PlotTicker_TickCount(ImPlotTicker* self);
extern void PlotTicker_Destroy(ImPlotTicker* self);
extern void PlotTime_FromDouble(ImPlotTime *pOut,double t);
extern ImPlotTime* PlotTime_ImPlotTime_Nil();
extern ImPlotTime* PlotTime_ImPlotTime_time_t(time_t s,int us);
extern void PlotTime_RollOver(ImPlotTime* self);
extern double PlotTime_ToDouble(ImPlotTime* self);
extern void PlotTime_Destroy(ImPlotTime* self);
extern ImPlotColormap Plot_AddColormap_U32PtrV(const char* name,const ImU32* cols,int size,bool qual);
extern ImPlotColormap Plot_AddColormap_Vec4PtrV(const char* name,const ImVec4* cols,int size,bool qual);
extern void Plot_AddTextCenteredV(ImDrawList* DrawList,ImVec2 top_center,ImU32 col,const char* text_begin);
extern void Plot_AddTextVerticalV(ImDrawList* DrawList,ImVec2 pos,ImU32 col,const char* text_begin);
extern void Plot_AddTime(ImPlotTime *pOut,const ImPlotTime t,ImPlotTimeUnit unit,int count);
extern bool Plot_AllAxesInputLocked(ImPlotAxis* axes,int count);
extern void Plot_Annotation_BoolV(double x,double y,const ImVec4 col,const ImVec2 pix_offset,bool clamp,bool round);
extern void Plot_Annotation_Str(double x,double y,const ImVec4 col,const ImVec2 pix_offset,bool clamp,const char* fmt);
extern bool Plot_AnyAxesHeld(ImPlotAxis* axes,int count);
extern bool Plot_AnyAxesHovered(ImPlotAxis* axes,int count);
extern bool Plot_AnyAxesInputLocked(ImPlotAxis* axes,int count);
extern bool Plot_BeginAlignedPlotsV(const char* group_id,bool vertical);
extern bool Plot_BeginDragDropSourceAxisV(ImAxis axis,ImGuiDragDropFlags flags);
extern bool Plot_BeginDragDropSourceItemV(const char* label_id,ImGuiDragDropFlags flags);
extern bool Plot_BeginDragDropSourcePlotV(ImGuiDragDropFlags flags);
extern bool Plot_BeginDragDropTargetAxis(ImAxis axis);
extern bool Plot_BeginDragDropTargetLegend();
extern bool Plot_BeginDragDropTargetPlot();
extern bool Plot_BeginItemV(const char* label_id,ImPlotItemFlags flags,ImPlotCol recolor_from);
extern bool Plot_BeginLegendPopupV(const char* label_id,ImGuiMouseButton mouse_button);
extern bool Plot_BeginPlotV(const char* title_id,const ImVec2 size,ImPlotFlags flags);
extern bool Plot_BeginSubplotsV(const char* title_id,int rows,int cols,const ImVec2 size,ImPlotSubplotFlags flags,float* row_ratios,float* col_ratios);
extern void Plot_BustColorCacheV(const char* plot_title_id);
extern void Plot_BustItemCache();
extern void Plot_BustPlotCache();
extern ImU32 Plot_CalcHoverColor(ImU32 col);
extern void Plot_CalcLegendSize(ImVec2 *pOut,ImPlotItemGroup* items,const ImVec2 pad,const ImVec2 spacing,bool vertical);
extern ImU32 Plot_CalcTextColor_U32(ImU32 bg);
extern ImU32 Plot_CalcTextColor_Vec4(const ImVec4 bg);
extern void Plot_CalcTextSizeVertical(ImVec2 *pOut,const char* text);
extern void Plot_CalculateBins_FloatPtr(const float* values,int count,ImPlotBin meth,const ImPlotRange range,int* bins_out,double* width_out);
extern void Plot_CalculateBins_S16Ptr(const ImS16* values,int count,ImPlotBin meth,const ImPlotRange range,int* bins_out,double* width_out);
extern void Plot_CalculateBins_S32Ptr(const ImS32* values,int count,ImPlotBin meth,const ImPlotRange range,int* bins_out,double* width_out);
extern void Plot_CalculateBins_S64Ptr(const ImS64* values,int count,ImPlotBin meth,const ImPlotRange range,int* bins_out,double* width_out);
extern void Plot_CalculateBins_S8Ptr(const ImS8* values,int count,ImPlotBin meth,const ImPlotRange range,int* bins_out,double* width_out);
extern void Plot_CalculateBins_U16Ptr(const ImU16* values,int count,ImPlotBin meth,const ImPlotRange range,int* bins_out,double* width_out);
extern void Plot_CalculateBins_U32Ptr(const ImU32* values,int count,ImPlotBin meth,const ImPlotRange range,int* bins_out,double* width_out);
extern void Plot_CalculateBins_U64Ptr(const ImU64* values,int count,ImPlotBin meth,const ImPlotRange range,int* bins_out,double* width_out);
extern void Plot_CalculateBins_U8Ptr(const ImU8* values,int count,ImPlotBin meth,const ImPlotRange range,int* bins_out,double* width_out);
extern void Plot_CalculateBins_doublePtr(const double* values,int count,ImPlotBin meth,const ImPlotRange range,int* bins_out,double* width_out);
extern void Plot_CancelPlotSelection();
extern void Plot_CeilTime(ImPlotTime *pOut,const ImPlotTime t,ImPlotTimeUnit unit);
extern void Plot_ClampLabelPos(ImVec2 *pOut,ImVec2 pos,const ImVec2 size,const ImVec2 Min,const ImVec2 Max);
extern bool Plot_ColormapButtonV(const char* label,const ImVec2 size,ImPlotColormap cmap);
extern void Plot_ColormapIcon(ImPlotColormap cmap);
extern void Plot_ColormapScaleV(const char* label,double scale_min,double scale_max,const ImVec2 size,const char* format,ImPlotColormapScaleFlags flags,ImPlotColormap cmap);
extern bool Plot_ColormapSliderV(const char* label,float* t,ImVec4* out,const char* format,ImPlotColormap cmap);
extern void Plot_CombineDateTime(ImPlotTime *pOut,const ImPlotTime date_part,const ImPlotTime time_part);
extern ImPlotContext* Plot_CreateContext();
extern void Plot_DestroyContextV(ImPlotContext* ctx);
extern bool Plot_DragLineXV(int id,double* x,const ImVec4 col,float thickness,ImPlotDragToolFlags flags);
extern bool Plot_DragLineYV(int id,double* y,const ImVec4 col,float thickness,ImPlotDragToolFlags flags);
extern bool Plot_DragPointV(int id,double* x,double* y,const ImVec4 col,float size,ImPlotDragToolFlags flags);
extern bool Plot_DragRectV(int id,double* x_min,double* y_min,double* x_max,double* y_max,const ImVec4 col,ImPlotDragToolFlags flags);
extern void Plot_EndAlignedPlots();
extern void Plot_EndDragDropSource();
extern void Plot_EndDragDropTarget();
extern void Plot_EndItem();
extern void Plot_EndLegendPopup();
extern void Plot_EndPlot();
extern void Plot_EndSubplots();
extern void Plot_FillRange_Vector_Float_Ptr(ImVector_float * buffer,int n,float vmin,float vmax);
extern void Plot_FillRange_Vector_S16_Ptr(ImVector_ImS16 * buffer,int n,ImS16 vmin,ImS16 vmax);
extern void Plot_FillRange_Vector_S32_Ptr(ImVector_ImS32 * buffer,int n,ImS32 vmin,ImS32 vmax);
extern void Plot_FillRange_Vector_S64_Ptr(ImVector_ImS64 * buffer,int n,ImS64 vmin,ImS64 vmax);
extern void Plot_FillRange_Vector_S8_Ptr(ImVector_ImS8 * buffer,int n,ImS8 vmin,ImS8 vmax);
extern void Plot_FillRange_Vector_U16_Ptr(ImVector_ImU16 * buffer,int n,ImU16 vmin,ImU16 vmax);
extern void Plot_FillRange_Vector_U32_Ptr(ImVector_ImU32 * buffer,int n,ImU32 vmin,ImU32 vmax);
extern void Plot_FillRange_Vector_U64_Ptr(ImVector_ImU64 * buffer,int n,ImU64 vmin,ImU64 vmax);
extern void Plot_FillRange_Vector_U8_Ptr(ImVector_ImU8 * buffer,int n,ImU8 vmin,ImU8 vmax);
extern void Plot_FillRange_Vector_double_Ptr(ImVector_double * buffer,int n,double vmin,double vmax);
extern void Plot_FitPoint(const ImPlotPoint p);
extern void Plot_FitPointX(double x);
extern void Plot_FitPointY(double y);
extern bool Plot_FitThisFrame();
extern void Plot_FloorTime(ImPlotTime *pOut,const ImPlotTime t,ImPlotTimeUnit unit);
extern int Plot_FormatDate(const ImPlotTime t,char* buffer,int size,ImPlotDateFmt fmt,bool use_iso_8601);
extern int Plot_FormatDateTime(const ImPlotTime t,char* buffer,int size,ImPlotDateTimeSpec fmt);
extern int Plot_FormatTime(const ImPlotTime t,char* buffer,int size,ImPlotTimeFmt fmt,bool use_24_hr_clk);
extern int Plot_Formatter_Default(double value,char* buff,int size,void* data);
extern int Plot_Formatter_Logit(double value,char* buff,int size,void* noname1);
extern int Plot_Formatter_Time(double noname1,char* buff,int size,void* data);
extern void Plot_GetAutoColor(ImVec4 *pOut,ImPlotCol idx);
extern void Plot_GetColormapColorV(ImVec4 *pOut,int idx,ImPlotColormap cmap);
extern ImU32 Plot_GetColormapColorU32(int idx,ImPlotColormap cmap);
extern int Plot_GetColormapCount();
extern ImPlotColormap Plot_GetColormapIndex(const char* name);
extern const char* Plot_GetColormapName(ImPlotColormap cmap);
extern int Plot_GetColormapSizeV(ImPlotColormap cmap);
extern ImPlotContext* Plot_GetCurrentContext();
extern ImPlotItem* Plot_GetCurrentItem();
extern ImPlotPlot* Plot_GetCurrentPlot();
extern int Plot_GetDaysInMonth(int year,int month);
extern tm* Plot_GetGmtTime(const ImPlotTime t,tm* ptm);
extern ImPlotInputMap* Plot_GetInputMap();
extern ImPlotItem* Plot_GetItem(const char* label_id);
extern const ImPlotNextItemData* Plot_GetItemData();
extern void Plot_GetLastItemColor(ImVec4 *pOut);
extern tm* Plot_GetLocTime(const ImPlotTime t,tm* ptm);
extern void Plot_GetLocationPosV(ImVec2 *pOut,const ImRect outer_rect,const ImVec2 inner_size,ImPlotLocation location,const ImVec2 pad);
extern const char* Plot_GetMarkerName(ImPlotMarker idx);
extern ImPlotPlot* Plot_GetPlot(const char* title);
extern ImDrawList* Plot_GetPlotDrawList();
extern ImPlotRect Plot_GetPlotLimitsV(ImAxis x_axis,ImAxis y_axis);
extern void Plot_GetPlotMousePosV(ImPlotPoint *pOut,ImAxis x_axis,ImAxis y_axis);
extern void Plot_GetPlotPos(ImVec2 *pOut);
extern ImPlotRect Plot_GetPlotSelectionV(ImAxis x_axis,ImAxis y_axis);
extern void Plot_GetPlotSize(ImVec2 *pOut);
extern ImPlotStyle* Plot_GetStyle();
extern const char* Plot_GetStyleColorName(ImPlotCol idx);
extern ImU32 Plot_GetStyleColorU32(ImPlotCol idx);
extern void Plot_GetStyleColorVec4(ImVec4 *pOut,ImPlotCol idx);
extern int Plot_GetYear(const ImPlotTime t);
extern void Plot_HideNextItemV(bool hidden,ImPlotCond cond);
extern bool Plot_ImAlmostEqualV(double v1,double v2,int ulp);
extern ImU32 Plot_ImAlphaU32(ImU32 col,float alpha);
extern float Plot_ImAsinh_Float(float x);
extern double Plot_ImAsinh_double(double x);
extern double Plot_ImConstrainInf(double val);
extern double Plot_ImConstrainLog(double val);
extern double Plot_ImConstrainNan(double val);
extern double Plot_ImConstrainTime(double val);
extern ImU32 Plot_ImLerpU32(const ImU32* colors,int size,float t);
extern float Plot_ImLog10_Float(float x);
extern double Plot_ImLog10_double(double x);
extern float Plot_ImMaxArray_FloatPtr(const float* values,int count);
extern ImS16 Plot_ImMaxArray_S16Ptr(const ImS16* values,int count);
extern ImS32 Plot_ImMaxArray_S32Ptr(const ImS32* values,int count);
extern ImS64 Plot_ImMaxArray_S64Ptr(const ImS64* values,int count);
extern ImS8 Plot_ImMaxArray_S8Ptr(const ImS8* values,int count);
extern ImU16 Plot_ImMaxArray_U16Ptr(const ImU16* values,int count);
extern ImU32 Plot_ImMaxArray_U32Ptr(const ImU32* values,int count);
extern ImU64 Plot_ImMaxArray_U64Ptr(const ImU64* values,int count);
extern ImU8 Plot_ImMaxArray_U8Ptr(const ImU8* values,int count);
extern double Plot_ImMaxArray_doublePtr(const double* values,int count);
extern double Plot_ImMean_FloatPtr(const float* values,int count);
extern double Plot_ImMean_S16Ptr(const ImS16* values,int count);
extern double Plot_ImMean_S32Ptr(const ImS32* values,int count);
extern double Plot_ImMean_S64Ptr(const ImS64* values,int count);
extern double Plot_ImMean_S8Ptr(const ImS8* values,int count);
extern double Plot_ImMean_U16Ptr(const ImU16* values,int count);
extern double Plot_ImMean_U32Ptr(const ImU32* values,int count);
extern double Plot_ImMean_U64Ptr(const ImU64* values,int count);
extern double Plot_ImMean_U8Ptr(const ImU8* values,int count);
extern double Plot_ImMean_doublePtr(const double* values,int count);
extern float Plot_ImMinArray_FloatPtr(const float* values,int count);
extern ImS16 Plot_ImMinArray_S16Ptr(const ImS16* values,int count);
extern ImS32 Plot_ImMinArray_S32Ptr(const ImS32* values,int count);
extern ImS64 Plot_ImMinArray_S64Ptr(const ImS64* values,int count);
extern ImS8 Plot_ImMinArray_S8Ptr(const ImS8* values,int count);
extern ImU16 Plot_ImMinArray_U16Ptr(const ImU16* values,int count);
extern ImU32 Plot_ImMinArray_U32Ptr(const ImU32* values,int count);
extern ImU64 Plot_ImMinArray_U64Ptr(const ImU64* values,int count);
extern ImU8 Plot_ImMinArray_U8Ptr(const ImU8* values,int count);
extern double Plot_ImMinArray_doublePtr(const double* values,int count);
extern void Plot_ImMinMaxArray_FloatPtr(const float* values,int count,float* min_out,float* max_out);
extern void Plot_ImMinMaxArray_S16Ptr(const ImS16* values,int count,ImS16* min_out,ImS16* max_out);
extern void Plot_ImMinMaxArray_S32Ptr(const ImS32* values,int count,ImS32* min_out,ImS32* max_out);
extern void Plot_ImMinMaxArray_S64Ptr(const ImS64* values,int count,ImS64* min_out,ImS64* max_out);
extern void Plot_ImMinMaxArray_S8Ptr(const ImS8* values,int count,ImS8* min_out,ImS8* max_out);
extern void Plot_ImMinMaxArray_U16Ptr(const ImU16* values,int count,ImU16* min_out,ImU16* max_out);
extern void Plot_ImMinMaxArray_U32Ptr(const ImU32* values,int count,ImU32* min_out,ImU32* max_out);
extern void Plot_ImMinMaxArray_U64Ptr(const ImU64* values,int count,ImU64* min_out,ImU64* max_out);
extern void Plot_ImMinMaxArray_U8Ptr(const ImU8* values,int count,ImU8* min_out,ImU8* max_out);
extern void Plot_ImMinMaxArray_doublePtr(const double* values,int count,double* min_out,double* max_out);
extern ImU32 Plot_ImMixU32(ImU32 a,ImU32 b,ImU32 s);
extern bool Plot_ImNan(double val);
extern bool Plot_ImNanOrInf(double val);
extern bool Plot_ImOverlaps_Float(float min_a,float max_a,float min_b,float max_b);
extern bool Plot_ImOverlaps_S16(ImS16 min_a,ImS16 max_a,ImS16 min_b,ImS16 max_b);
extern bool Plot_ImOverlaps_S32(ImS32 min_a,ImS32 max_a,ImS32 min_b,ImS32 max_b);
extern bool Plot_ImOverlaps_S64(ImS64 min_a,ImS64 max_a,ImS64 min_b,ImS64 max_b);
extern bool Plot_ImOverlaps_S8(ImS8 min_a,ImS8 max_a,ImS8 min_b,ImS8 max_b);
extern bool Plot_ImOverlaps_U16(ImU16 min_a,ImU16 max_a,ImU16 min_b,ImU16 max_b);
extern bool Plot_ImOverlaps_U32(ImU32 min_a,ImU32 max_a,ImU32 min_b,ImU32 max_b);
extern bool Plot_ImOverlaps_U64(ImU64 min_a,ImU64 max_a,ImU64 min_b,ImU64 max_b);
extern bool Plot_ImOverlaps_U8(ImU8 min_a,ImU8 max_a,ImU8 min_b,ImU8 max_b);
extern bool Plot_ImOverlaps_double(double min_a,double max_a,double min_b,double max_b);
extern int Plot_ImPosMod(int l,int r);
extern float Plot_ImRemap01_Float(float x,float x0,float x1);
extern ImS16 Plot_ImRemap01_S16(ImS16 x,ImS16 x0,ImS16 x1);
extern ImS32 Plot_ImRemap01_S32(ImS32 x,ImS32 x0,ImS32 x1);
extern ImS64 Plot_ImRemap01_S64(ImS64 x,ImS64 x0,ImS64 x1);
extern ImS8 Plot_ImRemap01_S8(ImS8 x,ImS8 x0,ImS8 x1);
extern ImU16 Plot_ImRemap01_U16(ImU16 x,ImU16 x0,ImU16 x1);
extern ImU32 Plot_ImRemap01_U32(ImU32 x,ImU32 x0,ImU32 x1);
extern ImU64 Plot_ImRemap01_U64(ImU64 x,ImU64 x0,ImU64 x1);
extern ImU8 Plot_ImRemap01_U8(ImU8 x,ImU8 x0,ImU8 x1);
extern double Plot_ImRemap01_double(double x,double x0,double x1);
extern float Plot_ImRemap_Float(float x,float x0,float x1,float y0,float y1);
extern ImS16 Plot_ImRemap_S16(ImS16 x,ImS16 x0,ImS16 x1,ImS16 y0,ImS16 y1);
extern ImS32 Plot_ImRemap_S32(ImS32 x,ImS32 x0,ImS32 x1,ImS32 y0,ImS32 y1);
extern ImS64 Plot_ImRemap_S64(ImS64 x,ImS64 x0,ImS64 x1,ImS64 y0,ImS64 y1);
extern ImS8 Plot_ImRemap_S8(ImS8 x,ImS8 x0,ImS8 x1,ImS8 y0,ImS8 y1);
extern ImU16 Plot_ImRemap_U16(ImU16 x,ImU16 x0,ImU16 x1,ImU16 y0,ImU16 y1);
extern ImU32 Plot_ImRemap_U32(ImU32 x,ImU32 x0,ImU32 x1,ImU32 y0,ImU32 y1);
extern ImU64 Plot_ImRemap_U64(ImU64 x,ImU64 x0,ImU64 x1,ImU64 y0,ImU64 y1);
extern ImU8 Plot_ImRemap_U8(ImU8 x,ImU8 x0,ImU8 x1,ImU8 y0,ImU8 y1);
extern double Plot_ImRemap_double(double x,double x0,double x1,double y0,double y1);
extern float Plot_ImSinh_Float(float x);
extern double Plot_ImSinh_double(double x);
extern double Plot_ImStdDev_FloatPtr(const float* values,int count);
extern double Plot_ImStdDev_S16Ptr(const ImS16* values,int count);
extern double Plot_ImStdDev_S32Ptr(const ImS32* values,int count);
extern double Plot_ImStdDev_S64Ptr(const ImS64* values,int count);
extern double Plot_ImStdDev_S8Ptr(const ImS8* values,int count);
extern double Plot_ImStdDev_U16Ptr(const ImU16* values,int count);
extern double Plot_ImStdDev_U32Ptr(const ImU32* values,int count);
extern double Plot_ImStdDev_U64Ptr(const ImU64* values,int count);
extern double Plot_ImStdDev_U8Ptr(const ImU8* values,int count);
extern double Plot_ImStdDev_doublePtr(const double* values,int count);
extern float Plot_ImSum_FloatPtr(const float* values,int count);
extern ImS16 Plot_ImSum_S16Ptr(const ImS16* values,int count);
extern ImS32 Plot_ImSum_S32Ptr(const ImS32* values,int count);
extern ImS64 Plot_ImSum_S64Ptr(const ImS64* values,int count);
extern ImS8 Plot_ImSum_S8Ptr(const ImS8* values,int count);
extern ImU16 Plot_ImSum_U16Ptr(const ImU16* values,int count);
extern ImU32 Plot_ImSum_U32Ptr(const ImU32* values,int count);
extern ImU64 Plot_ImSum_U64Ptr(const ImU64* values,int count);
extern ImU8 Plot_ImSum_U8Ptr(const ImU8* values,int count);
extern double Plot_ImSum_doublePtr(const double* values,int count);
extern void Plot_Initialize(ImPlotContext* ctx);
extern void Plot_Intersection(ImVec2 *pOut,const ImVec2 a1,const ImVec2 a2,const ImVec2 b1,const ImVec2 b2);
extern bool Plot_IsAxisHovered(ImAxis axis);
extern bool Plot_IsColorAuto_PlotCol(ImPlotCol idx);
extern bool Plot_IsColorAuto_Vec4(const ImVec4 col);
extern bool Plot_IsLeapYear(int year);
extern bool Plot_IsLegendEntryHovered(const char* label_id);
extern bool Plot_IsPlotHovered();
extern bool Plot_IsPlotSelected();
extern bool Plot_IsSubplotsHovered();
extern void Plot_ItemIcon_U32(ImU32 col);
extern void Plot_ItemIcon_Vec4(const ImVec4 col);
extern void Plot_LabelAxisValueV(const ImPlotAxis axis,double value,char* buff,int size,bool round);
extern void Plot_Locator_Default(ImPlotTicker* ticker,const ImPlotRange range,float pixels,bool vertical,ImPlotFormatter formatter,void* formatter_data);
extern void Plot_Locator_Log10(ImPlotTicker* ticker,const ImPlotRange range,float pixels,bool vertical,ImPlotFormatter formatter,void* formatter_data);
extern void Plot_Locator_SymLog(ImPlotTicker* ticker,const ImPlotRange range,float pixels,bool vertical,ImPlotFormatter formatter,void* formatter_data);
extern void Plot_Locator_Time(ImPlotTicker* ticker,const ImPlotRange range,float pixels,bool vertical,ImPlotFormatter formatter,void* formatter_data);
extern void Plot_MakeTimeV(ImPlotTime *pOut,int year,int month,int day,int hour,int min,int sec,int us);
extern void Plot_MapInputDefaultV(ImPlotInputMap* dst);
extern void Plot_MapInputReverseV(ImPlotInputMap* dst);
extern void Plot_MkGmtTime(ImPlotTime *pOut,struct tm* ptm);
extern void Plot_MkLocTime(ImPlotTime *pOut,struct tm* ptm);
extern void Plot_NextColormapColor(ImVec4 *pOut);
extern ImU32 Plot_NextColormapColorU32();
extern double Plot_NiceNum(double x,bool round);
extern int Plot_OrderOfMagnitude(double val);
extern int Plot_OrderToPrecision(int order);
extern void Plot_PixelsToPlot_FloatV(ImPlotPoint *pOut,float x,float y,ImAxis x_axis,ImAxis y_axis);
extern void Plot_PixelsToPlot_Vec2V(ImPlotPoint *pOut,const ImVec2 pix,ImAxis x_axis,ImAxis y_axis);
extern void Plot_PlotBarGroups_FloatPtrV(const char* const label_ids[],const float* values,int item_count,int group_count,double group_size,double shift,ImPlotBarGroupsFlags flags);
extern void Plot_PlotBarGroups_S16PtrV(const char* const label_ids[],const ImS16* values,int item_count,int group_count,double group_size,double shift,ImPlotBarGroupsFlags flags);
extern void Plot_PlotBarGroups_S32PtrV(const char* const label_ids[],const ImS32* values,int item_count,int group_count,double group_size,double shift,ImPlotBarGroupsFlags flags);
extern void Plot_PlotBarGroups_S64PtrV(const char* const label_ids[],const ImS64* values,int item_count,int group_count,double group_size,double shift,ImPlotBarGroupsFlags flags);
extern void Plot_PlotBarGroups_S8PtrV(const char* const label_ids[],const ImS8* values,int item_count,int group_count,double group_size,double shift,ImPlotBarGroupsFlags flags);
extern void Plot_PlotBarGroups_U16PtrV(const char* const label_ids[],const ImU16* values,int item_count,int group_count,double group_size,double shift,ImPlotBarGroupsFlags flags);
extern void Plot_PlotBarGroups_U32PtrV(const char* const label_ids[],const ImU32* values,int item_count,int group_count,double group_size,double shift,ImPlotBarGroupsFlags flags);
extern void Plot_PlotBarGroups_U64PtrV(const char* const label_ids[],const ImU64* values,int item_count,int group_count,double group_size,double shift,ImPlotBarGroupsFlags flags);
extern void Plot_PlotBarGroups_U8PtrV(const char* const label_ids[],const ImU8* values,int item_count,int group_count,double group_size,double shift,ImPlotBarGroupsFlags flags);
extern void Plot_PlotBarGroups_doublePtrV(const char* const label_ids[],const double* values,int item_count,int group_count,double group_size,double shift,ImPlotBarGroupsFlags flags);
extern void Plot_PlotBarsGV(const char* label_id,ImPlotPoint_getter getter,void* data,int count,double bar_size,ImPlotBarsFlags flags);
extern void Plot_PlotBars_FloatPtrFloatPtrV(const char* label_id,const float* xs,const float* ys,int count,double bar_size,ImPlotBarsFlags flags,int offset,int stride);
extern void Plot_PlotBars_FloatPtrIntV(const char* label_id,const float* values,int count,double bar_size,double shift,ImPlotBarsFlags flags,int offset,int stride);
extern void Plot_PlotBars_S16PtrIntV(const char* label_id,const ImS16* values,int count,double bar_size,double shift,ImPlotBarsFlags flags,int offset,int stride);
extern void Plot_PlotBars_S16PtrS16PtrV(const char* label_id,const ImS16* xs,const ImS16* ys,int count,double bar_size,ImPlotBarsFlags flags,int offset,int stride);
extern void Plot_PlotBars_S32PtrIntV(const char* label_id,const ImS32* values,int count,double bar_size,double shift,ImPlotBarsFlags flags,int offset,int stride);
extern void Plot_PlotBars_S32PtrS32PtrV(const char* label_id,const ImS32* xs,const ImS32* ys,int count,double bar_size,ImPlotBarsFlags flags,int offset,int stride);
extern void Plot_PlotBars_S64PtrIntV(const char* label_id,const ImS64* values,int count,double bar_size,double shift,ImPlotBarsFlags flags,int offset,int stride);
extern void Plot_PlotBars_S64PtrS64PtrV(const char* label_id,const ImS64* xs,const ImS64* ys,int count,double bar_size,ImPlotBarsFlags flags,int offset,int stride);
extern void Plot_PlotBars_S8PtrIntV(const char* label_id,const ImS8* values,int count,double bar_size,double shift,ImPlotBarsFlags flags,int offset,int stride);
extern void Plot_PlotBars_S8PtrS8PtrV(const char* label_id,const ImS8* xs,const ImS8* ys,int count,double bar_size,ImPlotBarsFlags flags,int offset,int stride);
extern void Plot_PlotBars_U16PtrIntV(const char* label_id,const ImU16* values,int count,double bar_size,double shift,ImPlotBarsFlags flags,int offset,int stride);
extern void Plot_PlotBars_U16PtrU16PtrV(const char* label_id,const ImU16* xs,const ImU16* ys,int count,double bar_size,ImPlotBarsFlags flags,int offset,int stride);
extern void Plot_PlotBars_U32PtrIntV(const char* label_id,const ImU32* values,int count,double bar_size,double shift,ImPlotBarsFlags flags,int offset,int stride);
extern void Plot_PlotBars_U32PtrU32PtrV(const char* label_id,const ImU32* xs,const ImU32* ys,int count,double bar_size,ImPlotBarsFlags flags,int offset,int stride);
extern void Plot_PlotBars_U64PtrIntV(const char* label_id,const ImU64* values,int count,double bar_size,double shift,ImPlotBarsFlags flags,int offset,int stride);
extern void Plot_PlotBars_U64PtrU64PtrV(const char* label_id,const ImU64* xs,const ImU64* ys,int count,double bar_size,ImPlotBarsFlags flags,int offset,int stride);
extern void Plot_PlotBars_U8PtrIntV(const char* label_id,const ImU8* values,int count,double bar_size,double shift,ImPlotBarsFlags flags,int offset,int stride);
extern void Plot_PlotBars_U8PtrU8PtrV(const char* label_id,const ImU8* xs,const ImU8* ys,int count,double bar_size,ImPlotBarsFlags flags,int offset,int stride);
extern void Plot_PlotBars_doublePtrIntV(const char* label_id,const double* values,int count,double bar_size,double shift,ImPlotBarsFlags flags,int offset,int stride);
extern void Plot_PlotBars_doublePtrdoublePtrV(const char* label_id,const double* xs,const double* ys,int count,double bar_size,ImPlotBarsFlags flags,int offset,int stride);
extern void Plot_PlotDigitalGV(const char* label_id,ImPlotPoint_getter getter,void* data,int count,ImPlotDigitalFlags flags);
extern void Plot_PlotDigital_FloatPtrV(const char* label_id,const float* xs,const float* ys,int count,ImPlotDigitalFlags flags,int offset,int stride);
extern void Plot_PlotDigital_S16PtrV(const char* label_id,const ImS16* xs,const ImS16* ys,int count,ImPlotDigitalFlags flags,int offset,int stride);
extern void Plot_PlotDigital_S32PtrV(const char* label_id,const ImS32* xs,const ImS32* ys,int count,ImPlotDigitalFlags flags,int offset,int stride);
extern void Plot_PlotDigital_S64PtrV(const char* label_id,const ImS64* xs,const ImS64* ys,int count,ImPlotDigitalFlags flags,int offset,int stride);
extern void Plot_PlotDigital_S8PtrV(const char* label_id,const ImS8* xs,const ImS8* ys,int count,ImPlotDigitalFlags flags,int offset,int stride);
extern void Plot_PlotDigital_U16PtrV(const char* label_id,const ImU16* xs,const ImU16* ys,int count,ImPlotDigitalFlags flags,int offset,int stride);
extern void Plot_PlotDigital_U32PtrV(const char* label_id,const ImU32* xs,const ImU32* ys,int count,ImPlotDigitalFlags flags,int offset,int stride);
extern void Plot_PlotDigital_U64PtrV(const char* label_id,const ImU64* xs,const ImU64* ys,int count,ImPlotDigitalFlags flags,int offset,int stride);
extern void Plot_PlotDigital_U8PtrV(const char* label_id,const ImU8* xs,const ImU8* ys,int count,ImPlotDigitalFlags flags,int offset,int stride);
extern void Plot_PlotDigital_doublePtrV(const char* label_id,const double* xs,const double* ys,int count,ImPlotDigitalFlags flags,int offset,int stride);
extern void Plot_PlotDummyV(const char* label_id,ImPlotDummyFlags flags);
extern void Plot_PlotErrorBars_FloatPtrFloatPtrFloatPtrFloatPtrV(const char* label_id,const float* xs,const float* ys,const float* neg,const float* pos,int count,ImPlotErrorBarsFlags flags,int offset,int stride);
extern void Plot_PlotErrorBars_FloatPtrFloatPtrFloatPtrIntV(const char* label_id,const float* xs,const float* ys,const float* err,int count,ImPlotErrorBarsFlags flags,int offset,int stride);
extern void Plot_PlotErrorBars_S16PtrS16PtrS16PtrIntV(const char* label_id,const ImS16* xs,const ImS16* ys,const ImS16* err,int count,ImPlotErrorBarsFlags flags,int offset,int stride);
extern void Plot_PlotErrorBars_S16PtrS16PtrS16PtrS16PtrV(const char* label_id,const ImS16* xs,const ImS16* ys,const ImS16* neg,const ImS16* pos,int count,ImPlotErrorBarsFlags flags,int offset,int stride);
extern void Plot_PlotErrorBars_S32PtrS32PtrS32PtrIntV(const char* label_id,const ImS32* xs,const ImS32* ys,const ImS32* err,int count,ImPlotErrorBarsFlags flags,int offset,int stride);
extern void Plot_PlotErrorBars_S32PtrS32PtrS32PtrS32PtrV(const char* label_id,const ImS32* xs,const ImS32* ys,const ImS32* neg,const ImS32* pos,int count,ImPlotErrorBarsFlags flags,int offset,int stride);
extern void Plot_PlotErrorBars_S64PtrS64PtrS64PtrIntV(const char* label_id,const ImS64* xs,const ImS64* ys,const ImS64* err,int count,ImPlotErrorBarsFlags flags,int offset,int stride);
extern void Plot_PlotErrorBars_S64PtrS64PtrS64PtrS64PtrV(const char* label_id,const ImS64* xs,const ImS64* ys,const ImS64* neg,const ImS64* pos,int count,ImPlotErrorBarsFlags flags,int offset,int stride);
extern void Plot_PlotErrorBars_S8PtrS8PtrS8PtrIntV(const char* label_id,const ImS8* xs,const ImS8* ys,const ImS8* err,int count,ImPlotErrorBarsFlags flags,int offset,int stride);
extern void Plot_PlotErrorBars_S8PtrS8PtrS8PtrS8PtrV(const char* label_id,const ImS8* xs,const ImS8* ys,const ImS8* neg,const ImS8* pos,int count,ImPlotErrorBarsFlags flags,int offset,int stride);
extern void Plot_PlotErrorBars_U16PtrU16PtrU16PtrIntV(const char* label_id,const ImU16* xs,const ImU16* ys,const ImU16* err,int count,ImPlotErrorBarsFlags flags,int offset,int stride);
extern void Plot_PlotErrorBars_U16PtrU16PtrU16PtrU16PtrV(const char* label_id,const ImU16* xs,const ImU16* ys,const ImU16* neg,const ImU16* pos,int count,ImPlotErrorBarsFlags flags,int offset,int stride);
extern void Plot_PlotErrorBars_U32PtrU32PtrU32PtrIntV(const char* label_id,const ImU32* xs,const ImU32* ys,const ImU32* err,int count,ImPlotErrorBarsFlags flags,int offset,int stride);
extern void Plot_PlotErrorBars_U32PtrU32PtrU32PtrU32PtrV(const char* label_id,const ImU32* xs,const ImU32* ys,const ImU32* neg,const ImU32* pos,int count,ImPlotErrorBarsFlags flags,int offset,int stride);
extern void Plot_PlotErrorBars_U64PtrU64PtrU64PtrIntV(const char* label_id,const ImU64* xs,const ImU64* ys,const ImU64* err,int count,ImPlotErrorBarsFlags flags,int offset,int stride);
extern void Plot_PlotErrorBars_U64PtrU64PtrU64PtrU64PtrV(const char* label_id,const ImU64* xs,const ImU64* ys,const ImU64* neg,const ImU64* pos,int count,ImPlotErrorBarsFlags flags,int offset,int stride);
extern void Plot_PlotErrorBars_U8PtrU8PtrU8PtrIntV(const char* label_id,const ImU8* xs,const ImU8* ys,const ImU8* err,int count,ImPlotErrorBarsFlags flags,int offset,int stride);
extern void Plot_PlotErrorBars_U8PtrU8PtrU8PtrU8PtrV(const char* label_id,const ImU8* xs,const ImU8* ys,const ImU8* neg,const ImU8* pos,int count,ImPlotErrorBarsFlags flags,int offset,int stride);
extern void Plot_PlotErrorBars_doublePtrdoublePtrdoublePtrIntV(const char* label_id,const double* xs,const double* ys,const double* err,int count,ImPlotErrorBarsFlags flags,int offset,int stride);
extern void Plot_PlotErrorBars_doublePtrdoublePtrdoublePtrdoublePtrV(const char* label_id,const double* xs,const double* ys,const double* neg,const double* pos,int count,ImPlotErrorBarsFlags flags,int offset,int stride);
extern void Plot_PlotHeatmap_FloatPtrV(const char* label_id,const float* values,int rows,int cols,double scale_min,double scale_max,const char* label_fmt,const ImPlotPoint bounds_min,const ImPlotPoint bounds_max,ImPlotHeatmapFlags flags);
extern void Plot_PlotHeatmap_S16PtrV(const char* label_id,const ImS16* values,int rows,int cols,double scale_min,double scale_max,const char* label_fmt,const ImPlotPoint bounds_min,const ImPlotPoint bounds_max,ImPlotHeatmapFlags flags);
extern void Plot_PlotHeatmap_S32PtrV(const char* label_id,const ImS32* values,int rows,int cols,double scale_min,double scale_max,const char* label_fmt,const ImPlotPoint bounds_min,const ImPlotPoint bounds_max,ImPlotHeatmapFlags flags);
extern void Plot_PlotHeatmap_S64PtrV(const char* label_id,const ImS64* values,int rows,int cols,double scale_min,double scale_max,const char* label_fmt,const ImPlotPoint bounds_min,const ImPlotPoint bounds_max,ImPlotHeatmapFlags flags);
extern void Plot_PlotHeatmap_S8PtrV(const char* label_id,const ImS8* values,int rows,int cols,double scale_min,double scale_max,const char* label_fmt,const ImPlotPoint bounds_min,const ImPlotPoint bounds_max,ImPlotHeatmapFlags flags);
extern void Plot_PlotHeatmap_U16PtrV(const char* label_id,const ImU16* values,int rows,int cols,double scale_min,double scale_max,const char* label_fmt,const ImPlotPoint bounds_min,const ImPlotPoint bounds_max,ImPlotHeatmapFlags flags);
extern void Plot_PlotHeatmap_U32PtrV(const char* label_id,const ImU32* values,int rows,int cols,double scale_min,double scale_max,const char* label_fmt,const ImPlotPoint bounds_min,const ImPlotPoint bounds_max,ImPlotHeatmapFlags flags);
extern void Plot_PlotHeatmap_U64PtrV(const char* label_id,const ImU64* values,int rows,int cols,double scale_min,double scale_max,const char* label_fmt,const ImPlotPoint bounds_min,const ImPlotPoint bounds_max,ImPlotHeatmapFlags flags);
extern void Plot_PlotHeatmap_U8PtrV(const char* label_id,const ImU8* values,int rows,int cols,double scale_min,double scale_max,const char* label_fmt,const ImPlotPoint bounds_min,const ImPlotPoint bounds_max,ImPlotHeatmapFlags flags);
extern void Plot_PlotHeatmap_doublePtrV(const char* label_id,const double* values,int rows,int cols,double scale_min,double scale_max,const char* label_fmt,const ImPlotPoint bounds_min,const ImPlotPoint bounds_max,ImPlotHeatmapFlags flags);
extern double Plot_PlotHistogram2D_FloatPtrV(const char* label_id,const float* xs,const float* ys,int count,int x_bins,int y_bins,ImPlotRect range,ImPlotHistogramFlags flags);
extern double Plot_PlotHistogram2D_S16PtrV(const char* label_id,const ImS16* xs,const ImS16* ys,int count,int x_bins,int y_bins,ImPlotRect range,ImPlotHistogramFlags flags);
extern double Plot_PlotHistogram2D_S32PtrV(const char* label_id,const ImS32* xs,const ImS32* ys,int count,int x_bins,int y_bins,ImPlotRect range,ImPlotHistogramFlags flags);
extern double Plot_PlotHistogram2D_S64PtrV(const char* label_id,const ImS64* xs,const ImS64* ys,int count,int x_bins,int y_bins,ImPlotRect range,ImPlotHistogramFlags flags);
extern double Plot_PlotHistogram2D_S8PtrV(const char* label_id,const ImS8* xs,const ImS8* ys,int count,int x_bins,int y_bins,ImPlotRect range,ImPlotHistogramFlags flags);
extern double Plot_PlotHistogram2D_U16PtrV(const char* label_id,const ImU16* xs,const ImU16* ys,int count,int x_bins,int y_bins,ImPlotRect range,ImPlotHistogramFlags flags);
extern double Plot_PlotHistogram2D_U32PtrV(const char* label_id,const ImU32* xs,const ImU32* ys,int count,int x_bins,int y_bins,ImPlotRect range,ImPlotHistogramFlags flags);
extern double Plot_PlotHistogram2D_U64PtrV(const char* label_id,const ImU64* xs,const ImU64* ys,int count,int x_bins,int y_bins,ImPlotRect range,ImPlotHistogramFlags flags);
extern double Plot_PlotHistogram2D_U8PtrV(const char* label_id,const ImU8* xs,const ImU8* ys,int count,int x_bins,int y_bins,ImPlotRect range,ImPlotHistogramFlags flags);
extern double Plot_PlotHistogram2D_doublePtrV(const char* label_id,const double* xs,const double* ys,int count,int x_bins,int y_bins,ImPlotRect range,ImPlotHistogramFlags flags);
extern double Plot_PlotHistogram_FloatPtrV(const char* label_id,const float* values,int count,int bins,double bar_scale,ImPlotRange range,ImPlotHistogramFlags flags);
extern double Plot_PlotHistogram_S16PtrV(const char* label_id,const ImS16* values,int count,int bins,double bar_scale,ImPlotRange range,ImPlotHistogramFlags flags);
extern double Plot_PlotHistogram_S32PtrV(const char* label_id,const ImS32* values,int count,int bins,double bar_scale,ImPlotRange range,ImPlotHistogramFlags flags);
extern double Plot_PlotHistogram_S64PtrV(const char* label_id,const ImS64* values,int count,int bins,double bar_scale,ImPlotRange range,ImPlotHistogramFlags flags);
extern double Plot_PlotHistogram_S8PtrV(const char* label_id,const ImS8* values,int count,int bins,double bar_scale,ImPlotRange range,ImPlotHistogramFlags flags);
extern double Plot_PlotHistogram_U16PtrV(const char* label_id,const ImU16* values,int count,int bins,double bar_scale,ImPlotRange range,ImPlotHistogramFlags flags);
extern double Plot_PlotHistogram_U32PtrV(const char* label_id,const ImU32* values,int count,int bins,double bar_scale,ImPlotRange range,ImPlotHistogramFlags flags);
extern double Plot_PlotHistogram_U64PtrV(const char* label_id,const ImU64* values,int count,int bins,double bar_scale,ImPlotRange range,ImPlotHistogramFlags flags);
extern double Plot_PlotHistogram_U8PtrV(const char* label_id,const ImU8* values,int count,int bins,double bar_scale,ImPlotRange range,ImPlotHistogramFlags flags);
extern double Plot_PlotHistogram_doublePtrV(const char* label_id,const double* values,int count,int bins,double bar_scale,ImPlotRange range,ImPlotHistogramFlags flags);
extern void Plot_PlotImageV(const char* label_id,ImTextureID user_texture_id,const ImPlotPoint bounds_min,const ImPlotPoint bounds_max,const ImVec2 uv0,const ImVec2 uv1,const ImVec4 tint_col,ImPlotImageFlags flags);
extern void Plot_PlotInfLines_FloatPtrV(const char* label_id,const float* values,int count,ImPlotInfLinesFlags flags,int offset,int stride);
extern void Plot_PlotInfLines_S16PtrV(const char* label_id,const ImS16* values,int count,ImPlotInfLinesFlags flags,int offset,int stride);
extern void Plot_PlotInfLines_S32PtrV(const char* label_id,const ImS32* values,int count,ImPlotInfLinesFlags flags,int offset,int stride);
extern void Plot_PlotInfLines_S64PtrV(const char* label_id,const ImS64* values,int count,ImPlotInfLinesFlags flags,int offset,int stride);
extern void Plot_PlotInfLines_S8PtrV(const char* label_id,const ImS8* values,int count,ImPlotInfLinesFlags flags,int offset,int stride);
extern void Plot_PlotInfLines_U16PtrV(const char* label_id,const ImU16* values,int count,ImPlotInfLinesFlags flags,int offset,int stride);
extern void Plot_PlotInfLines_U32PtrV(const char* label_id,const ImU32* values,int count,ImPlotInfLinesFlags flags,int offset,int stride);
extern void Plot_PlotInfLines_U64PtrV(const char* label_id,const ImU64* values,int count,ImPlotInfLinesFlags flags,int offset,int stride);
extern void Plot_PlotInfLines_U8PtrV(const char* label_id,const ImU8* values,int count,ImPlotInfLinesFlags flags,int offset,int stride);
extern void Plot_PlotInfLines_doublePtrV(const char* label_id,const double* values,int count,ImPlotInfLinesFlags flags,int offset,int stride);
extern void Plot_PlotLineGV(const char* label_id,ImPlotPoint_getter getter,void* data,int count,ImPlotLineFlags flags);
extern void Plot_PlotLine_FloatPtrFloatPtrV(const char* label_id,const float* xs,const float* ys,int count,ImPlotLineFlags flags,int offset,int stride);
extern void Plot_PlotLine_FloatPtrIntV(const char* label_id,const float* values,int count,double xscale,double xstart,ImPlotLineFlags flags,int offset,int stride);
extern void Plot_PlotLine_S16PtrIntV(const char* label_id,const ImS16* values,int count,double xscale,double xstart,ImPlotLineFlags flags,int offset,int stride);
extern void Plot_PlotLine_S16PtrS16PtrV(const char* label_id,const ImS16* xs,const ImS16* ys,int count,ImPlotLineFlags flags,int offset,int stride);
extern void Plot_PlotLine_S32PtrIntV(const char* label_id,const ImS32* values,int count,double xscale,double xstart,ImPlotLineFlags flags,int offset,int stride);
extern void Plot_PlotLine_S32PtrS32PtrV(const char* label_id,const ImS32* xs,const ImS32* ys,int count,ImPlotLineFlags flags,int offset,int stride);
extern void Plot_PlotLine_S64PtrIntV(const char* label_id,const ImS64* values,int count,double xscale,double xstart,ImPlotLineFlags flags,int offset,int stride);
extern void Plot_PlotLine_S64PtrS64PtrV(const char* label_id,const ImS64* xs,const ImS64* ys,int count,ImPlotLineFlags flags,int offset,int stride);
extern void Plot_PlotLine_S8PtrIntV(const char* label_id,const ImS8* values,int count,double xscale,double xstart,ImPlotLineFlags flags,int offset,int stride);
extern void Plot_PlotLine_S8PtrS8PtrV(const char* label_id,const ImS8* xs,const ImS8* ys,int count,ImPlotLineFlags flags,int offset,int stride);
extern void Plot_PlotLine_U16PtrIntV(const char* label_id,const ImU16* values,int count,double xscale,double xstart,ImPlotLineFlags flags,int offset,int stride);
extern void Plot_PlotLine_U16PtrU16PtrV(const char* label_id,const ImU16* xs,const ImU16* ys,int count,ImPlotLineFlags flags,int offset,int stride);
extern void Plot_PlotLine_U32PtrIntV(const char* label_id,const ImU32* values,int count,double xscale,double xstart,ImPlotLineFlags flags,int offset,int stride);
extern void Plot_PlotLine_U32PtrU32PtrV(const char* label_id,const ImU32* xs,const ImU32* ys,int count,ImPlotLineFlags flags,int offset,int stride);
extern void Plot_PlotLine_U64PtrIntV(const char* label_id,const ImU64* values,int count,double xscale,double xstart,ImPlotLineFlags flags,int offset,int stride);
extern void Plot_PlotLine_U64PtrU64PtrV(const char* label_id,const ImU64* xs,const ImU64* ys,int count,ImPlotLineFlags flags,int offset,int stride);
extern void Plot_PlotLine_U8PtrIntV(const char* label_id,const ImU8* values,int count,double xscale,double xstart,ImPlotLineFlags flags,int offset,int stride);
extern void Plot_PlotLine_U8PtrU8PtrV(const char* label_id,const ImU8* xs,const ImU8* ys,int count,ImPlotLineFlags flags,int offset,int stride);
extern void Plot_PlotLine_doublePtrIntV(const char* label_id,const double* values,int count,double xscale,double xstart,ImPlotLineFlags flags,int offset,int stride);
extern void Plot_PlotLine_doublePtrdoublePtrV(const char* label_id,const double* xs,const double* ys,int count,ImPlotLineFlags flags,int offset,int stride);
extern void Plot_PlotPieChart_FloatPtrV(const char* const label_ids[],const float* values,int count,double x,double y,double radius,const char* label_fmt,double angle0,ImPlotPieChartFlags flags);
extern void Plot_PlotPieChart_S16PtrV(const char* const label_ids[],const ImS16* values,int count,double x,double y,double radius,const char* label_fmt,double angle0,ImPlotPieChartFlags flags);
extern void Plot_PlotPieChart_S32PtrV(const char* const label_ids[],const ImS32* values,int count,double x,double y,double radius,const char* label_fmt,double angle0,ImPlotPieChartFlags flags);
extern void Plot_PlotPieChart_S64PtrV(const char* const label_ids[],const ImS64* values,int count,double x,double y,double radius,const char* label_fmt,double angle0,ImPlotPieChartFlags flags);
extern void Plot_PlotPieChart_S8PtrV(const char* const label_ids[],const ImS8* values,int count,double x,double y,double radius,const char* label_fmt,double angle0,ImPlotPieChartFlags flags);
extern void Plot_PlotPieChart_U16PtrV(const char* const label_ids[],const ImU16* values,int count,double x,double y,double radius,const char* label_fmt,double angle0,ImPlotPieChartFlags flags);
extern void Plot_PlotPieChart_U32PtrV(const char* const label_ids[],const ImU32* values,int count,double x,double y,double radius,const char* label_fmt,double angle0,ImPlotPieChartFlags flags);
extern void Plot_PlotPieChart_U64PtrV(const char* const label_ids[],const ImU64* values,int count,double x,double y,double radius,const char* label_fmt,double angle0,ImPlotPieChartFlags flags);
extern void Plot_PlotPieChart_U8PtrV(const char* const label_ids[],const ImU8* values,int count,double x,double y,double radius,const char* label_fmt,double angle0,ImPlotPieChartFlags flags);
extern void Plot_PlotPieChart_doublePtrV(const char* const label_ids[],const double* values,int count,double x,double y,double radius,const char* label_fmt,double angle0,ImPlotPieChartFlags flags);
extern void Plot_PlotScatterGV(const char* label_id,ImPlotPoint_getter getter,void* data,int count,ImPlotScatterFlags flags);
extern void Plot_PlotScatter_FloatPtrFloatPtrV(const char* label_id,const float* xs,const float* ys,int count,ImPlotScatterFlags flags,int offset,int stride);
extern void Plot_PlotScatter_FloatPtrIntV(const char* label_id,const float* values,int count,double xscale,double xstart,ImPlotScatterFlags flags,int offset,int stride);
extern void Plot_PlotScatter_S16PtrIntV(const char* label_id,const ImS16* values,int count,double xscale,double xstart,ImPlotScatterFlags flags,int offset,int stride);
extern void Plot_PlotScatter_S16PtrS16PtrV(const char* label_id,const ImS16* xs,const ImS16* ys,int count,ImPlotScatterFlags flags,int offset,int stride);
extern void Plot_PlotScatter_S32PtrIntV(const char* label_id,const ImS32* values,int count,double xscale,double xstart,ImPlotScatterFlags flags,int offset,int stride);
extern void Plot_PlotScatter_S32PtrS32PtrV(const char* label_id,const ImS32* xs,const ImS32* ys,int count,ImPlotScatterFlags flags,int offset,int stride);
extern void Plot_PlotScatter_S64PtrIntV(const char* label_id,const ImS64* values,int count,double xscale,double xstart,ImPlotScatterFlags flags,int offset,int stride);
extern void Plot_PlotScatter_S64PtrS64PtrV(const char* label_id,const ImS64* xs,const ImS64* ys,int count,ImPlotScatterFlags flags,int offset,int stride);
extern void Plot_PlotScatter_S8PtrIntV(const char* label_id,const ImS8* values,int count,double xscale,double xstart,ImPlotScatterFlags flags,int offset,int stride);
extern void Plot_PlotScatter_S8PtrS8PtrV(const char* label_id,const ImS8* xs,const ImS8* ys,int count,ImPlotScatterFlags flags,int offset,int stride);
extern void Plot_PlotScatter_U16PtrIntV(const char* label_id,const ImU16* values,int count,double xscale,double xstart,ImPlotScatterFlags flags,int offset,int stride);
extern void Plot_PlotScatter_U16PtrU16PtrV(const char* label_id,const ImU16* xs,const ImU16* ys,int count,ImPlotScatterFlags flags,int offset,int stride);
extern void Plot_PlotScatter_U32PtrIntV(const char* label_id,const ImU32* values,int count,double xscale,double xstart,ImPlotScatterFlags flags,int offset,int stride);
extern void Plot_PlotScatter_U32PtrU32PtrV(const char* label_id,const ImU32* xs,const ImU32* ys,int count,ImPlotScatterFlags flags,int offset,int stride);
extern void Plot_PlotScatter_U64PtrIntV(const char* label_id,const ImU64* values,int count,double xscale,double xstart,ImPlotScatterFlags flags,int offset,int stride);
extern void Plot_PlotScatter_U64PtrU64PtrV(const char* label_id,const ImU64* xs,const ImU64* ys,int count,ImPlotScatterFlags flags,int offset,int stride);
extern void Plot_PlotScatter_U8PtrIntV(const char* label_id,const ImU8* values,int count,double xscale,double xstart,ImPlotScatterFlags flags,int offset,int stride);
extern void Plot_PlotScatter_U8PtrU8PtrV(const char* label_id,const ImU8* xs,const ImU8* ys,int count,ImPlotScatterFlags flags,int offset,int stride);
extern void Plot_PlotScatter_doublePtrIntV(const char* label_id,const double* values,int count,double xscale,double xstart,ImPlotScatterFlags flags,int offset,int stride);
extern void Plot_PlotScatter_doublePtrdoublePtrV(const char* label_id,const double* xs,const double* ys,int count,ImPlotScatterFlags flags,int offset,int stride);
extern void Plot_PlotShadedGV(const char* label_id,ImPlotPoint_getter getter1,void* data1,ImPlotPoint_getter getter2,void* data2,int count,ImPlotShadedFlags flags);
extern void Plot_PlotShaded_FloatPtrFloatPtrFloatPtrV(const char* label_id,const float* xs,const float* ys1,const float* ys2,int count,ImPlotShadedFlags flags,int offset,int stride);
extern void Plot_PlotShaded_FloatPtrFloatPtrIntV(const char* label_id,const float* xs,const float* ys,int count,double yref,ImPlotShadedFlags flags,int offset,int stride);
extern void Plot_PlotShaded_FloatPtrIntV(const char* label_id,const float* values,int count,double yref,double xscale,double xstart,ImPlotShadedFlags flags,int offset,int stride);
extern void Plot_PlotShaded_S16PtrIntV(const char* label_id,const ImS16* values,int count,double yref,double xscale,double xstart,ImPlotShadedFlags flags,int offset,int stride);
extern void Plot_PlotShaded_S16PtrS16PtrIntV(const char* label_id,const ImS16* xs,const ImS16* ys,int count,double yref,ImPlotShadedFlags flags,int offset,int stride);
extern void Plot_PlotShaded_S16PtrS16PtrS16PtrV(const char* label_id,const ImS16* xs,const ImS16* ys1,const ImS16* ys2,int count,ImPlotShadedFlags flags,int offset,int stride);
extern void Plot_PlotShaded_S32PtrIntV(const char* label_id,const ImS32* values,int count,double yref,double xscale,double xstart,ImPlotShadedFlags flags,int offset,int stride);
extern void Plot_PlotShaded_S32PtrS32PtrIntV(const char* label_id,const ImS32* xs,const ImS32* ys,int count,double yref,ImPlotShadedFlags flags,int offset,int stride);
extern void Plot_PlotShaded_S32PtrS32PtrS32PtrV(const char* label_id,const ImS32* xs,const ImS32* ys1,const ImS32* ys2,int count,ImPlotShadedFlags flags,int offset,int stride);
extern void Plot_PlotShaded_S64PtrIntV(const char* label_id,const ImS64* values,int count,double yref,double xscale,double xstart,ImPlotShadedFlags flags,int offset,int stride);
extern void Plot_PlotShaded_S64PtrS64PtrIntV(const char* label_id,const ImS64* xs,const ImS64* ys,int count,double yref,ImPlotShadedFlags flags,int offset,int stride);
extern void Plot_PlotShaded_S64PtrS64PtrS64PtrV(const char* label_id,const ImS64* xs,const ImS64* ys1,const ImS64* ys2,int count,ImPlotShadedFlags flags,int offset,int stride);
extern void Plot_PlotShaded_S8PtrIntV(const char* label_id,const ImS8* values,int count,double yref,double xscale,double xstart,ImPlotShadedFlags flags,int offset,int stride);
extern void Plot_PlotShaded_S8PtrS8PtrIntV(const char* label_id,const ImS8* xs,const ImS8* ys,int count,double yref,ImPlotShadedFlags flags,int offset,int stride);
extern void Plot_PlotShaded_S8PtrS8PtrS8PtrV(const char* label_id,const ImS8* xs,const ImS8* ys1,const ImS8* ys2,int count,ImPlotShadedFlags flags,int offset,int stride);
extern void Plot_PlotShaded_U16PtrIntV(const char* label_id,const ImU16* values,int count,double yref,double xscale,double xstart,ImPlotShadedFlags flags,int offset,int stride);
extern void Plot_PlotShaded_U16PtrU16PtrIntV(const char* label_id,const ImU16* xs,const ImU16* ys,int count,double yref,ImPlotShadedFlags flags,int offset,int stride);
extern void Plot_PlotShaded_U16PtrU16PtrU16PtrV(const char* label_id,const ImU16* xs,const ImU16* ys1,const ImU16* ys2,int count,ImPlotShadedFlags flags,int offset,int stride);
extern void Plot_PlotShaded_U32PtrIntV(const char* label_id,const ImU32* values,int count,double yref,double xscale,double xstart,ImPlotShadedFlags flags,int offset,int stride);
extern void Plot_PlotShaded_U32PtrU32PtrIntV(const char* label_id,const ImU32* xs,const ImU32* ys,int count,double yref,ImPlotShadedFlags flags,int offset,int stride);
extern void Plot_PlotShaded_U32PtrU32PtrU32PtrV(const char* label_id,const ImU32* xs,const ImU32* ys1,const ImU32* ys2,int count,ImPlotShadedFlags flags,int offset,int stride);
extern void Plot_PlotShaded_U64PtrIntV(const char* label_id,const ImU64* values,int count,double yref,double xscale,double xstart,ImPlotShadedFlags flags,int offset,int stride);
extern void Plot_PlotShaded_U64PtrU64PtrIntV(const char* label_id,const ImU64* xs,const ImU64* ys,int count,double yref,ImPlotShadedFlags flags,int offset,int stride);
extern void Plot_PlotShaded_U64PtrU64PtrU64PtrV(const char* label_id,const ImU64* xs,const ImU64* ys1,const ImU64* ys2,int count,ImPlotShadedFlags flags,int offset,int stride);
extern void Plot_PlotShaded_U8PtrIntV(const char* label_id,const ImU8* values,int count,double yref,double xscale,double xstart,ImPlotShadedFlags flags,int offset,int stride);
extern void Plot_PlotShaded_U8PtrU8PtrIntV(const char* label_id,const ImU8* xs,const ImU8* ys,int count,double yref,ImPlotShadedFlags flags,int offset,int stride);
extern void Plot_PlotShaded_U8PtrU8PtrU8PtrV(const char* label_id,const ImU8* xs,const ImU8* ys1,const ImU8* ys2,int count,ImPlotShadedFlags flags,int offset,int stride);
extern void Plot_PlotShaded_doublePtrIntV(const char* label_id,const double* values,int count,double yref,double xscale,double xstart,ImPlotShadedFlags flags,int offset,int stride);
extern void Plot_PlotShaded_doublePtrdoublePtrIntV(const char* label_id,const double* xs,const double* ys,int count,double yref,ImPlotShadedFlags flags,int offset,int stride);
extern void Plot_PlotShaded_doublePtrdoublePtrdoublePtrV(const char* label_id,const double* xs,const double* ys1,const double* ys2,int count,ImPlotShadedFlags flags,int offset,int stride);
extern void Plot_PlotStairsGV(const char* label_id,ImPlotPoint_getter getter,void* data,int count,ImPlotStairsFlags flags);
extern void Plot_PlotStairs_FloatPtrFloatPtrV(const char* label_id,const float* xs,const float* ys,int count,ImPlotStairsFlags flags,int offset,int stride);
extern void Plot_PlotStairs_FloatPtrIntV(const char* label_id,const float* values,int count,double xscale,double xstart,ImPlotStairsFlags flags,int offset,int stride);
extern void Plot_PlotStairs_S16PtrIntV(const char* label_id,const ImS16* values,int count,double xscale,double xstart,ImPlotStairsFlags flags,int offset,int stride);
extern void Plot_PlotStairs_S16PtrS16PtrV(const char* label_id,const ImS16* xs,const ImS16* ys,int count,ImPlotStairsFlags flags,int offset,int stride);
extern void Plot_PlotStairs_S32PtrIntV(const char* label_id,const ImS32* values,int count,double xscale,double xstart,ImPlotStairsFlags flags,int offset,int stride);
extern void Plot_PlotStairs_S32PtrS32PtrV(const char* label_id,const ImS32* xs,const ImS32* ys,int count,ImPlotStairsFlags flags,int offset,int stride);
extern void Plot_PlotStairs_S64PtrIntV(const char* label_id,const ImS64* values,int count,double xscale,double xstart,ImPlotStairsFlags flags,int offset,int stride);
extern void Plot_PlotStairs_S64PtrS64PtrV(const char* label_id,const ImS64* xs,const ImS64* ys,int count,ImPlotStairsFlags flags,int offset,int stride);
extern void Plot_PlotStairs_S8PtrIntV(const char* label_id,const ImS8* values,int count,double xscale,double xstart,ImPlotStairsFlags flags,int offset,int stride);
extern void Plot_PlotStairs_S8PtrS8PtrV(const char* label_id,const ImS8* xs,const ImS8* ys,int count,ImPlotStairsFlags flags,int offset,int stride);
extern void Plot_PlotStairs_U16PtrIntV(const char* label_id,const ImU16* values,int count,double xscale,double xstart,ImPlotStairsFlags flags,int offset,int stride);
extern void Plot_PlotStairs_U16PtrU16PtrV(const char* label_id,const ImU16* xs,const ImU16* ys,int count,ImPlotStairsFlags flags,int offset,int stride);
extern void Plot_PlotStairs_U32PtrIntV(const char* label_id,const ImU32* values,int count,double xscale,double xstart,ImPlotStairsFlags flags,int offset,int stride);
extern void Plot_PlotStairs_U32PtrU32PtrV(const char* label_id,const ImU32* xs,const ImU32* ys,int count,ImPlotStairsFlags flags,int offset,int stride);
extern void Plot_PlotStairs_U64PtrIntV(const char* label_id,const ImU64* values,int count,double xscale,double xstart,ImPlotStairsFlags flags,int offset,int stride);
extern void Plot_PlotStairs_U64PtrU64PtrV(const char* label_id,const ImU64* xs,const ImU64* ys,int count,ImPlotStairsFlags flags,int offset,int stride);
extern void Plot_PlotStairs_U8PtrIntV(const char* label_id,const ImU8* values,int count,double xscale,double xstart,ImPlotStairsFlags flags,int offset,int stride);
extern void Plot_PlotStairs_U8PtrU8PtrV(const char* label_id,const ImU8* xs,const ImU8* ys,int count,ImPlotStairsFlags flags,int offset,int stride);
extern void Plot_PlotStairs_doublePtrIntV(const char* label_id,const double* values,int count,double xscale,double xstart,ImPlotStairsFlags flags,int offset,int stride);
extern void Plot_PlotStairs_doublePtrdoublePtrV(const char* label_id,const double* xs,const double* ys,int count,ImPlotStairsFlags flags,int offset,int stride);
extern void Plot_PlotStems_FloatPtrFloatPtrV(const char* label_id,const float* xs,const float* ys,int count,double ref,ImPlotStemsFlags flags,int offset,int stride);
extern void Plot_PlotStems_FloatPtrIntV(const char* label_id,const float* values,int count,double ref,double scale,double start,ImPlotStemsFlags flags,int offset,int stride);
extern void Plot_PlotStems_S16PtrIntV(const char* label_id,const ImS16* values,int count,double ref,double scale,double start,ImPlotStemsFlags flags,int offset,int stride);
extern void Plot_PlotStems_S16PtrS16PtrV(const char* label_id,const ImS16* xs,const ImS16* ys,int count,double ref,ImPlotStemsFlags flags,int offset,int stride);
extern void Plot_PlotStems_S32PtrIntV(const char* label_id,const ImS32* values,int count,double ref,double scale,double start,ImPlotStemsFlags flags,int offset,int stride);
extern void Plot_PlotStems_S32PtrS32PtrV(const char* label_id,const ImS32* xs,const ImS32* ys,int count,double ref,ImPlotStemsFlags flags,int offset,int stride);
extern void Plot_PlotStems_S64PtrIntV(const char* label_id,const ImS64* values,int count,double ref,double scale,double start,ImPlotStemsFlags flags,int offset,int stride);
extern void Plot_PlotStems_S64PtrS64PtrV(const char* label_id,const ImS64* xs,const ImS64* ys,int count,double ref,ImPlotStemsFlags flags,int offset,int stride);
extern void Plot_PlotStems_S8PtrIntV(const char* label_id,const ImS8* values,int count,double ref,double scale,double start,ImPlotStemsFlags flags,int offset,int stride);
extern void Plot_PlotStems_S8PtrS8PtrV(const char* label_id,const ImS8* xs,const ImS8* ys,int count,double ref,ImPlotStemsFlags flags,int offset,int stride);
extern void Plot_PlotStems_U16PtrIntV(const char* label_id,const ImU16* values,int count,double ref,double scale,double start,ImPlotStemsFlags flags,int offset,int stride);
extern void Plot_PlotStems_U16PtrU16PtrV(const char* label_id,const ImU16* xs,const ImU16* ys,int count,double ref,ImPlotStemsFlags flags,int offset,int stride);
extern void Plot_PlotStems_U32PtrIntV(const char* label_id,const ImU32* values,int count,double ref,double scale,double start,ImPlotStemsFlags flags,int offset,int stride);
extern void Plot_PlotStems_U32PtrU32PtrV(const char* label_id,const ImU32* xs,const ImU32* ys,int count,double ref,ImPlotStemsFlags flags,int offset,int stride);
extern void Plot_PlotStems_U64PtrIntV(const char* label_id,const ImU64* values,int count,double ref,double scale,double start,ImPlotStemsFlags flags,int offset,int stride);
extern void Plot_PlotStems_U64PtrU64PtrV(const char* label_id,const ImU64* xs,const ImU64* ys,int count,double ref,ImPlotStemsFlags flags,int offset,int stride);
extern void Plot_PlotStems_U8PtrIntV(const char* label_id,const ImU8* values,int count,double ref,double scale,double start,ImPlotStemsFlags flags,int offset,int stride);
extern void Plot_PlotStems_U8PtrU8PtrV(const char* label_id,const ImU8* xs,const ImU8* ys,int count,double ref,ImPlotStemsFlags flags,int offset,int stride);
extern void Plot_PlotStems_doublePtrIntV(const char* label_id,const double* values,int count,double ref,double scale,double start,ImPlotStemsFlags flags,int offset,int stride);
extern void Plot_PlotStems_doublePtrdoublePtrV(const char* label_id,const double* xs,const double* ys,int count,double ref,ImPlotStemsFlags flags,int offset,int stride);
extern void Plot_PlotTextV(const char* text,double x,double y,const ImVec2 pix_offset,ImPlotTextFlags flags);
extern void Plot_PlotToPixels_PlotPoIntV(ImVec2 *pOut,const ImPlotPoint plt,ImAxis x_axis,ImAxis y_axis);
extern void Plot_PlotToPixels_doubleV(ImVec2 *pOut,double x,double y,ImAxis x_axis,ImAxis y_axis);
extern void Plot_PopColormapV(int count);
extern void Plot_PopPlotClipRect();
extern void Plot_PopStyleColorV(int count);
extern void Plot_PopStyleVarV(int count);
extern int Plot_Precision(double val);
extern void Plot_PushColormap_PlotColormap(ImPlotColormap cmap);
extern void Plot_PushColormap_Str(const char* name);
extern void Plot_PushPlotClipRectV(float expand);
extern void Plot_PushStyleColor_U32(ImPlotCol idx,ImU32 col);
extern void Plot_PushStyleColor_Vec4(ImPlotCol idx,const ImVec4 col);
extern void Plot_PushStyleVar_Float(ImPlotStyleVar idx,float val);
extern void Plot_PushStyleVar_Int(ImPlotStyleVar idx,int val);
extern void Plot_PushStyleVar_Vec2(ImPlotStyleVar idx,const ImVec2 val);
extern bool Plot_RangesOverlap(const ImPlotRange r1,const ImPlotRange r2);
extern ImPlotItem* Plot_RegisterOrGetItemV(const char* label_id,ImPlotItemFlags flags,bool* just_created);
extern void Plot_RenderColorBar(const ImU32* colors,int size,ImDrawList* DrawList,const ImRect bounds,bool vert,bool reversed,bool continuous);
extern void Plot_ResetCtxForNextAlignedPlots(ImPlotContext* ctx);
extern void Plot_ResetCtxForNextPlot(ImPlotContext* ctx);
extern void Plot_ResetCtxForNextSubplot(ImPlotContext* ctx);
extern void Plot_RoundTime(ImPlotTime *pOut,const ImPlotTime t,ImPlotTimeUnit unit);
extern double Plot_RoundTo(double val,int prec);
extern void Plot_SampleColormapV(ImVec4 *pOut,float t,ImPlotColormap cmap);
extern ImU32 Plot_SampleColormapU32(float t,ImPlotColormap cmap);
extern void Plot_SetAxes(ImAxis x_axis,ImAxis y_axis);
extern void Plot_SetAxis(ImAxis axis);
extern void Plot_SetCurrentContext(ImPlotContext* ctx);
extern void Plot_SetImGuiContext(ImGuiContext* ctx);
extern void Plot_SetNextAxesLimitsV(double x_min,double x_max,double y_min,double y_max,ImPlotCond cond);
extern void Plot_SetNextAxesToFit();
extern void Plot_SetNextAxisLimitsV(ImAxis axis,double v_min,double v_max,ImPlotCond cond);
extern void Plot_SetNextAxisLinks(ImAxis axis,double* link_min,double* link_max);
extern void Plot_SetNextAxisToFit(ImAxis axis);
extern void Plot_SetNextErrorBarStyleV(const ImVec4 col,float size,float weight);
extern void Plot_SetNextFillStyleV(const ImVec4 col,float alpha_mod);
extern void Plot_SetNextLineStyleV(const ImVec4 col,float weight);
extern void Plot_SetNextMarkerStyleV(ImPlotMarker marker,float size,const ImVec4 fill,float weight,const ImVec4 outline);
extern void Plot_SetupAxesV(const char* x_label,const char* y_label,ImPlotAxisFlags x_flags,ImPlotAxisFlags y_flags);
extern void Plot_SetupAxesLimitsV(double x_min,double x_max,double y_min,double y_max,ImPlotCond cond);
extern void Plot_SetupAxisV(ImAxis axis,const char* label,ImPlotAxisFlags flags);
extern void Plot_SetupAxisFormat_PlotFormatterV(ImAxis axis,ImPlotFormatter formatter,void* data);
extern void Plot_SetupAxisFormat_Str(ImAxis axis,const char* fmt);
extern void Plot_SetupAxisLimitsV(ImAxis axis,double v_min,double v_max,ImPlotCond cond);
extern void Plot_SetupAxisLimitsConstraints(ImAxis axis,double v_min,double v_max);
extern void Plot_SetupAxisLinks(ImAxis axis,double* link_min,double* link_max);
extern void Plot_SetupAxisScale_PlotScale(ImAxis axis,ImPlotScale scale);
extern void Plot_SetupAxisScale_PlotTransformV(ImAxis axis,ImPlotTransform forward,ImPlotTransform inverse,void* data);
extern void Plot_SetupAxisTicks_doubleV(ImAxis axis,double v_min,double v_max,int n_ticks,const char* const labels[],bool keep_default);
extern void Plot_SetupAxisTicks_doublePtrV(ImAxis axis,const double* values,int n_ticks,const char* const labels[],bool keep_default);
extern void Plot_SetupAxisZoomConstraints(ImAxis axis,double z_min,double z_max);
extern void Plot_SetupFinish();
extern void Plot_SetupLegendV(ImPlotLocation location,ImPlotLegendFlags flags);
extern void Plot_SetupLock();
extern void Plot_SetupMouseTextV(ImPlotLocation location,ImPlotMouseTextFlags flags);
extern void Plot_ShowAltLegendV(const char* title_id,bool vertical,const ImVec2 size,bool interactable);
extern void Plot_ShowAxisContextMenuV(ImPlotAxis* axis,ImPlotAxis* equal_axis,bool time_allowed);
extern bool Plot_ShowColormapSelector(const char* label);
extern bool Plot_ShowDatePickerV(const char* id,int* level,ImPlotTime* t,const ImPlotTime* t1,const ImPlotTime* t2);
extern void Plot_ShowDemoWindowV(bool* p_open);
extern bool Plot_ShowInputMapSelector(const char* label);
extern bool Plot_ShowLegendContextMenu(ImPlotLegend* legend,bool visible);
extern bool Plot_ShowLegendEntries(ImPlotItemGroup* items,const ImRect legend_bb,bool interactable,const ImVec2 pad,const ImVec2 spacing,bool vertical,ImDrawList* DrawList);
extern void Plot_ShowMetricsWindowV(bool* p_popen);
extern void Plot_ShowPlotContextMenu(ImPlotPlot* plot);
extern void Plot_ShowStyleEditorV(ImPlotStyle* ref);
extern bool Plot_ShowStyleSelector(const char* label);
extern void Plot_ShowSubplotsContextMenu(ImPlotSubplot* subplot);
extern bool Plot_ShowTimePicker(const char* id,ImPlotTime* t);
extern void Plot_ShowUserGuide();
extern void Plot_StyleColorsAutoV(ImPlotStyle* dst);
extern void Plot_StyleColorsClassicV(ImPlotStyle* dst);
extern void Plot_StyleColorsDarkV(ImPlotStyle* dst);
extern void Plot_StyleColorsLightV(ImPlotStyle* dst);
extern void Plot_SubplotNextCell();
extern void Plot_TagX_BoolV(double x,const ImVec4 col,bool round);
extern void Plot_TagX_Str(double x,const ImVec4 col,const char* fmt);
extern void Plot_TagY_BoolV(double y,const ImVec4 col,bool round);
extern void Plot_TagY_Str(double y,const ImVec4 col,const char* fmt);
extern double Plot_TransformForward_Log10(double v,void* noname1);
extern double Plot_TransformForward_Logit(double v,void* noname1);
extern double Plot_TransformForward_SymLog(double v,void* noname1);
extern double Plot_TransformInverse_Log10(double v,void* noname1);
extern double Plot_TransformInverse_Logit(double v,void* noname1);
extern double Plot_TransformInverse_SymLog(double v,void* noname1);
extern bool PlotAxis_SetMax(ImPlotAxis* self,double _max);
extern bool PlotAxis_SetMin(ImPlotAxis* self,double _min);
extern ImPlotColormap Plot_AddColormap_U32Ptr(const char* name,const ImU32* cols,int size);
extern ImPlotColormap Plot_AddColormap_Vec4Ptr(const char* name,const ImVec4* cols,int size);
extern void Plot_AddTextCentered(ImDrawList* DrawList,ImVec2 top_center,ImU32 col,const char* text_begin);
extern void Plot_AddTextVertical(ImDrawList* DrawList,ImVec2 pos,ImU32 col,const char* text_begin);
extern void Plot_Annotation_Bool(double x,double y,const ImVec4 col,const ImVec2 pix_offset,bool clamp);
extern bool Plot_BeginAlignedPlots(const char* group_id);
extern bool Plot_BeginDragDropSourceAxis(ImAxis axis);
extern bool Plot_BeginDragDropSourceItem(const char* label_id);
extern bool Plot_BeginDragDropSourcePlot();
extern bool Plot_BeginItem(const char* label_id);
extern bool Plot_BeginLegendPopup(const char* label_id);
extern bool Plot_BeginPlot(const char* title_id);
extern bool Plot_BeginSubplots(const char* title_id,int rows,int cols,const ImVec2 size);
extern void Plot_BustColorCache();
extern bool Plot_ColormapButton(const char* label);
extern void Plot_ColormapScale(const char* label,double scale_min,double scale_max);
extern bool Plot_ColormapSlider(const char* label,float* t);
extern void Plot_DestroyContext();
extern bool Plot_DragLineX(int id,double* x,const ImVec4 col);
extern bool Plot_DragLineY(int id,double* y,const ImVec4 col);
extern bool Plot_DragPoint(int id,double* x,double* y,const ImVec4 col);
extern bool Plot_DragRect(int id,double* x_min,double* y_min,double* x_max,double* y_max,const ImVec4 col);
extern void Plot_GetColormapColor(ImVec4* pOut,int idx);
extern int Plot_GetColormapSize();
extern void Plot_GetLocationPos(ImVec2* pOut,const ImRect outer_rect,const ImVec2 inner_size,ImPlotLocation location);
extern ImPlotRect Plot_GetPlotLimits();
extern void Plot_GetPlotMousePos(ImPlotPoint* pOut);
extern ImPlotRect Plot_GetPlotSelection();
extern void Plot_HideNextItem();
extern bool Plot_ImAlmostEqual(double v1,double v2);
extern void Plot_LabelAxisValue(const ImPlotAxis axis,double value,char* buff,int size);
extern void Plot_MakeTime(ImPlotTime* pOut,int year);
extern void Plot_MapInputDefault();
extern void Plot_MapInputReverse();
extern void Plot_PixelsToPlot_Float(ImPlotPoint* pOut,float x,float y);
extern void Plot_PixelsToPlot_Vec2(ImPlotPoint* pOut,const ImVec2 pix);
extern void Plot_PlotBarGroups_FloatPtr(const char* const label_ids[],const float* values,int item_count,int group_count);
extern void Plot_PlotBarGroups_S16Ptr(const char* const label_ids[],const ImS16* values,int item_count,int group_count);
extern void Plot_PlotBarGroups_S32Ptr(const char* const label_ids[],const ImS32* values,int item_count,int group_count);
extern void Plot_PlotBarGroups_S64Ptr(const char* const label_ids[],const ImS64* values,int item_count,int group_count);
extern void Plot_PlotBarGroups_S8Ptr(const char* const label_ids[],const ImS8* values,int item_count,int group_count);
extern void Plot_PlotBarGroups_U16Ptr(const char* const label_ids[],const ImU16* values,int item_count,int group_count);
extern void Plot_PlotBarGroups_U32Ptr(const char* const label_ids[],const ImU32* values,int item_count,int group_count);
extern void Plot_PlotBarGroups_U64Ptr(const char* const label_ids[],const ImU64* values,int item_count,int group_count);
extern void Plot_PlotBarGroups_U8Ptr(const char* const label_ids[],const ImU8* values,int item_count,int group_count);
extern void Plot_PlotBarGroups_doublePtr(const char* const label_ids[],const double* values,int item_count,int group_count);
extern void Plot_PlotBarsG(const char* label_id,ImPlotPoint_getter getter,void* data,int count,double bar_size);
extern void Plot_PlotBars_FloatPtrFloatPtr(const char* label_id,const float* xs,const float* ys,int count,double bar_size);
extern void Plot_PlotBars_FloatPtrInt(const char* label_id,const float* values,int count);
extern void Plot_PlotBars_S16PtrInt(const char* label_id,const ImS16* values,int count);
extern void Plot_PlotBars_S16PtrS16Ptr(const char* label_id,const ImS16* xs,const ImS16* ys,int count,double bar_size);
extern void Plot_PlotBars_S32PtrInt(const char* label_id,const ImS32* values,int count);
extern void Plot_PlotBars_S32PtrS32Ptr(const char* label_id,const ImS32* xs,const ImS32* ys,int count,double bar_size);
extern void Plot_PlotBars_S64PtrInt(const char* label_id,const ImS64* values,int count);
extern void Plot_PlotBars_S64PtrS64Ptr(const char* label_id,const ImS64* xs,const ImS64* ys,int count,double bar_size);
extern void Plot_PlotBars_S8PtrInt(const char* label_id,const ImS8* values,int count);
extern void Plot_PlotBars_S8PtrS8Ptr(const char* label_id,const ImS8* xs,const ImS8* ys,int count,double bar_size);
extern void Plot_PlotBars_U16PtrInt(const char* label_id,const ImU16* values,int count);
extern void Plot_PlotBars_U16PtrU16Ptr(const char* label_id,const ImU16* xs,const ImU16* ys,int count,double bar_size);
extern void Plot_PlotBars_U32PtrInt(const char* label_id,const ImU32* values,int count);
extern void Plot_PlotBars_U32PtrU32Ptr(const char* label_id,const ImU32* xs,const ImU32* ys,int count,double bar_size);
extern void Plot_PlotBars_U64PtrInt(const char* label_id,const ImU64* values,int count);
extern void Plot_PlotBars_U64PtrU64Ptr(const char* label_id,const ImU64* xs,const ImU64* ys,int count,double bar_size);
extern void Plot_PlotBars_U8PtrInt(const char* label_id,const ImU8* values,int count);
extern void Plot_PlotBars_U8PtrU8Ptr(const char* label_id,const ImU8* xs,const ImU8* ys,int count,double bar_size);
extern void Plot_PlotBars_doublePtrInt(const char* label_id,const double* values,int count);
extern void Plot_PlotBars_doublePtrdoublePtr(const char* label_id,const double* xs,const double* ys,int count,double bar_size);
extern void Plot_PlotDigitalG(const char* label_id,ImPlotPoint_getter getter,void* data,int count);
extern void Plot_PlotDigital_FloatPtr(const char* label_id,const float* xs,const float* ys,int count);
extern void Plot_PlotDigital_S16Ptr(const char* label_id,const ImS16* xs,const ImS16* ys,int count);
extern void Plot_PlotDigital_S32Ptr(const char* label_id,const ImS32* xs,const ImS32* ys,int count);
extern void Plot_PlotDigital_S64Ptr(const char* label_id,const ImS64* xs,const ImS64* ys,int count);
extern void Plot_PlotDigital_S8Ptr(const char* label_id,const ImS8* xs,const ImS8* ys,int count);
extern void Plot_PlotDigital_U16Ptr(const char* label_id,const ImU16* xs,const ImU16* ys,int count);
extern void Plot_PlotDigital_U32Ptr(const char* label_id,const ImU32* xs,const ImU32* ys,int count);
extern void Plot_PlotDigital_U64Ptr(const char* label_id,const ImU64* xs,const ImU64* ys,int count);
extern void Plot_PlotDigital_U8Ptr(const char* label_id,const ImU8* xs,const ImU8* ys,int count);
extern void Plot_PlotDigital_doublePtr(const char* label_id,const double* xs,const double* ys,int count);
extern void Plot_PlotDummy(const char* label_id);
extern void Plot_PlotErrorBars_FloatPtrFloatPtrFloatPtrFloatPtr(const char* label_id,const float* xs,const float* ys,const float* neg,const float* pos,int count);
extern void Plot_PlotErrorBars_FloatPtrFloatPtrFloatPtrInt(const char* label_id,const float* xs,const float* ys,const float* err,int count);
extern void Plot_PlotErrorBars_S16PtrS16PtrS16PtrInt(const char* label_id,const ImS16* xs,const ImS16* ys,const ImS16* err,int count);
extern void Plot_PlotErrorBars_S16PtrS16PtrS16PtrS16Ptr(const char* label_id,const ImS16* xs,const ImS16* ys,const ImS16* neg,const ImS16* pos,int count);
extern void Plot_PlotErrorBars_S32PtrS32PtrS32PtrInt(const char* label_id,const ImS32* xs,const ImS32* ys,const ImS32* err,int count);
extern void Plot_PlotErrorBars_S32PtrS32PtrS32PtrS32Ptr(const char* label_id,const ImS32* xs,const ImS32* ys,const ImS32* neg,const ImS32* pos,int count);
extern void Plot_PlotErrorBars_S64PtrS64PtrS64PtrInt(const char* label_id,const ImS64* xs,const ImS64* ys,const ImS64* err,int count);
extern void Plot_PlotErrorBars_S64PtrS64PtrS64PtrS64Ptr(const char* label_id,const ImS64* xs,const ImS64* ys,const ImS64* neg,const ImS64* pos,int count);
extern void Plot_PlotErrorBars_S8PtrS8PtrS8PtrInt(const char* label_id,const ImS8* xs,const ImS8* ys,const ImS8* err,int count);
extern void Plot_PlotErrorBars_S8PtrS8PtrS8PtrS8Ptr(const char* label_id,const ImS8* xs,const ImS8* ys,const ImS8* neg,const ImS8* pos,int count);
extern void Plot_PlotErrorBars_U16PtrU16PtrU16PtrInt(const char* label_id,const ImU16* xs,const ImU16* ys,const ImU16* err,int count);
extern void Plot_PlotErrorBars_U16PtrU16PtrU16PtrU16Ptr(const char* label_id,const ImU16* xs,const ImU16* ys,const ImU16* neg,const ImU16* pos,int count);
extern void Plot_PlotErrorBars_U32PtrU32PtrU32PtrInt(const char* label_id,const ImU32* xs,const ImU32* ys,const ImU32* err,int count);
extern void Plot_PlotErrorBars_U32PtrU32PtrU32PtrU32Ptr(const char* label_id,const ImU32* xs,const ImU32* ys,const ImU32* neg,const ImU32* pos,int count);
extern void Plot_PlotErrorBars_U64PtrU64PtrU64PtrInt(const char* label_id,const ImU64* xs,const ImU64* ys,const ImU64* err,int count);
extern void Plot_PlotErrorBars_U64PtrU64PtrU64PtrU64Ptr(const char* label_id,const ImU64* xs,const ImU64* ys,const ImU64* neg,const ImU64* pos,int count);
extern void Plot_PlotErrorBars_U8PtrU8PtrU8PtrInt(const char* label_id,const ImU8* xs,const ImU8* ys,const ImU8* err,int count);
extern void Plot_PlotErrorBars_U8PtrU8PtrU8PtrU8Ptr(const char* label_id,const ImU8* xs,const ImU8* ys,const ImU8* neg,const ImU8* pos,int count);
extern void Plot_PlotErrorBars_doublePtrdoublePtrdoublePtrInt(const char* label_id,const double* xs,const double* ys,const double* err,int count);
extern void Plot_PlotErrorBars_doublePtrdoublePtrdoublePtrdoublePtr(const char* label_id,const double* xs,const double* ys,const double* neg,const double* pos,int count);
extern void Plot_PlotHeatmap_FloatPtr(const char* label_id,const float* values,int rows,int cols);
extern void Plot_PlotHeatmap_S16Ptr(const char* label_id,const ImS16* values,int rows,int cols);
extern void Plot_PlotHeatmap_S32Ptr(const char* label_id,const ImS32* values,int rows,int cols);
extern void Plot_PlotHeatmap_S64Ptr(const char* label_id,const ImS64* values,int rows,int cols);
extern void Plot_PlotHeatmap_S8Ptr(const char* label_id,const ImS8* values,int rows,int cols);
extern void Plot_PlotHeatmap_U16Ptr(const char* label_id,const ImU16* values,int rows,int cols);
extern void Plot_PlotHeatmap_U32Ptr(const char* label_id,const ImU32* values,int rows,int cols);
extern void Plot_PlotHeatmap_U64Ptr(const char* label_id,const ImU64* values,int rows,int cols);
extern void Plot_PlotHeatmap_U8Ptr(const char* label_id,const ImU8* values,int rows,int cols);
extern void Plot_PlotHeatmap_doublePtr(const char* label_id,const double* values,int rows,int cols);
extern double Plot_PlotHistogram2D_FloatPtr(const char* label_id,const float* xs,const float* ys,int count);
extern double Plot_PlotHistogram2D_S16Ptr(const char* label_id,const ImS16* xs,const ImS16* ys,int count);
extern double Plot_PlotHistogram2D_S32Ptr(const char* label_id,const ImS32* xs,const ImS32* ys,int count);
extern double Plot_PlotHistogram2D_S64Ptr(const char* label_id,const ImS64* xs,const ImS64* ys,int count);
extern double Plot_PlotHistogram2D_S8Ptr(const char* label_id,const ImS8* xs,const ImS8* ys,int count);
extern double Plot_PlotHistogram2D_U16Ptr(const char* label_id,const ImU16* xs,const ImU16* ys,int count);
extern double Plot_PlotHistogram2D_U32Ptr(const char* label_id,const ImU32* xs,const ImU32* ys,int count);
extern double Plot_PlotHistogram2D_U64Ptr(const char* label_id,const ImU64* xs,const ImU64* ys,int count);
extern double Plot_PlotHistogram2D_U8Ptr(const char* label_id,const ImU8* xs,const ImU8* ys,int count);
extern double Plot_PlotHistogram2D_doublePtr(const char* label_id,const double* xs,const double* ys,int count);
extern double Plot_PlotHistogram_FloatPtr(const char* label_id,const float* values,int count);
extern double Plot_PlotHistogram_S16Ptr(const char* label_id,const ImS16* values,int count);
extern double Plot_PlotHistogram_S32Ptr(const char* label_id,const ImS32* values,int count);
extern double Plot_PlotHistogram_S64Ptr(const char* label_id,const ImS64* values,int count);
extern double Plot_PlotHistogram_S8Ptr(const char* label_id,const ImS8* values,int count);
extern double Plot_PlotHistogram_U16Ptr(const char* label_id,const ImU16* values,int count);
extern double Plot_PlotHistogram_U32Ptr(const char* label_id,const ImU32* values,int count);
extern double Plot_PlotHistogram_U64Ptr(const char* label_id,const ImU64* values,int count);
extern double Plot_PlotHistogram_U8Ptr(const char* label_id,const ImU8* values,int count);
extern double Plot_PlotHistogram_doublePtr(const char* label_id,const double* values,int count);
extern void Plot_PlotImage(const char* label_id,ImTextureID user_texture_id,const ImPlotPoint bounds_min,const ImPlotPoint bounds_max);
extern void Plot_PlotInfLines_FloatPtr(const char* label_id,const float* values,int count);
extern void Plot_PlotInfLines_S16Ptr(const char* label_id,const ImS16* values,int count);
extern void Plot_PlotInfLines_S32Ptr(const char* label_id,const ImS32* values,int count);
extern void Plot_PlotInfLines_S64Ptr(const char* label_id,const ImS64* values,int count);
extern void Plot_PlotInfLines_S8Ptr(const char* label_id,const ImS8* values,int count);
extern void Plot_PlotInfLines_U16Ptr(const char* label_id,const ImU16* values,int count);
extern void Plot_PlotInfLines_U32Ptr(const char* label_id,const ImU32* values,int count);
extern void Plot_PlotInfLines_U64Ptr(const char* label_id,const ImU64* values,int count);
extern void Plot_PlotInfLines_U8Ptr(const char* label_id,const ImU8* values,int count);
extern void Plot_PlotInfLines_doublePtr(const char* label_id,const double* values,int count);
extern void Plot_PlotLineG(const char* label_id,ImPlotPoint_getter getter,void* data,int count);
extern void Plot_PlotLine_FloatPtrFloatPtr(const char* label_id,const float* xs,const float* ys,int count);
extern void Plot_PlotLine_FloatPtrInt(const char* label_id,const float* values,int count);
extern void Plot_PlotLine_S16PtrInt(const char* label_id,const ImS16* values,int count);
extern void Plot_PlotLine_S16PtrS16Ptr(const char* label_id,const ImS16* xs,const ImS16* ys,int count);
extern void Plot_PlotLine_S32PtrInt(const char* label_id,const ImS32* values,int count);
extern void Plot_PlotLine_S32PtrS32Ptr(const char* label_id,const ImS32* xs,const ImS32* ys,int count);
extern void Plot_PlotLine_S64PtrInt(const char* label_id,const ImS64* values,int count);
extern void Plot_PlotLine_S64PtrS64Ptr(const char* label_id,const ImS64* xs,const ImS64* ys,int count);
extern void Plot_PlotLine_S8PtrInt(const char* label_id,const ImS8* values,int count);
extern void Plot_PlotLine_S8PtrS8Ptr(const char* label_id,const ImS8* xs,const ImS8* ys,int count);
extern void Plot_PlotLine_U16PtrInt(const char* label_id,const ImU16* values,int count);
extern void Plot_PlotLine_U16PtrU16Ptr(const char* label_id,const ImU16* xs,const ImU16* ys,int count);
extern void Plot_PlotLine_U32PtrInt(const char* label_id,const ImU32* values,int count);
extern void Plot_PlotLine_U32PtrU32Ptr(const char* label_id,const ImU32* xs,const ImU32* ys,int count);
extern void Plot_PlotLine_U64PtrInt(const char* label_id,const ImU64* values,int count);
extern void Plot_PlotLine_U64PtrU64Ptr(const char* label_id,const ImU64* xs,const ImU64* ys,int count);
extern void Plot_PlotLine_U8PtrInt(const char* label_id,const ImU8* values,int count);
extern void Plot_PlotLine_U8PtrU8Ptr(const char* label_id,const ImU8* xs,const ImU8* ys,int count);
extern void Plot_PlotLine_doublePtrInt(const char* label_id,const double* values,int count);
extern void Plot_PlotLine_doublePtrdoublePtr(const char* label_id,const double* xs,const double* ys,int count);
extern void Plot_PlotPieChart_FloatPtr(const char* const label_ids[],const float* values,int count,double x,double y,double radius);
extern void Plot_PlotPieChart_S16Ptr(const char* const label_ids[],const ImS16* values,int count,double x,double y,double radius);
extern void Plot_PlotPieChart_S32Ptr(const char* const label_ids[],const ImS32* values,int count,double x,double y,double radius);
extern void Plot_PlotPieChart_S64Ptr(const char* const label_ids[],const ImS64* values,int count,double x,double y,double radius);
extern void Plot_PlotPieChart_S8Ptr(const char* const label_ids[],const ImS8* values,int count,double x,double y,double radius);
extern void Plot_PlotPieChart_U16Ptr(const char* const label_ids[],const ImU16* values,int count,double x,double y,double radius);
extern void Plot_PlotPieChart_U32Ptr(const char* const label_ids[],const ImU32* values,int count,double x,double y,double radius);
extern void Plot_PlotPieChart_U64Ptr(const char* const label_ids[],const ImU64* values,int count,double x,double y,double radius);
extern void Plot_PlotPieChart_U8Ptr(const char* const label_ids[],const ImU8* values,int count,double x,double y,double radius);
extern void Plot_PlotPieChart_doublePtr(const char* const label_ids[],const double* values,int count,double x,double y,double radius);
extern void Plot_PlotScatterG(const char* label_id,ImPlotPoint_getter getter,void* data,int count);
extern void Plot_PlotScatter_FloatPtrFloatPtr(const char* label_id,const float* xs,const float* ys,int count);
extern void Plot_PlotScatter_FloatPtrInt(const char* label_id,const float* values,int count);
extern void Plot_PlotScatter_S16PtrInt(const char* label_id,const ImS16* values,int count);
extern void Plot_PlotScatter_S16PtrS16Ptr(const char* label_id,const ImS16* xs,const ImS16* ys,int count);
extern void Plot_PlotScatter_S32PtrInt(const char* label_id,const ImS32* values,int count);
extern void Plot_PlotScatter_S32PtrS32Ptr(const char* label_id,const ImS32* xs,const ImS32* ys,int count);
extern void Plot_PlotScatter_S64PtrInt(const char* label_id,const ImS64* values,int count);
extern void Plot_PlotScatter_S64PtrS64Ptr(const char* label_id,const ImS64* xs,const ImS64* ys,int count);
extern void Plot_PlotScatter_S8PtrInt(const char* label_id,const ImS8* values,int count);
extern void Plot_PlotScatter_S8PtrS8Ptr(const char* label_id,const ImS8* xs,const ImS8* ys,int count);
extern void Plot_PlotScatter_U16PtrInt(const char* label_id,const ImU16* values,int count);
extern void Plot_PlotScatter_U16PtrU16Ptr(const char* label_id,const ImU16* xs,const ImU16* ys,int count);
extern void Plot_PlotScatter_U32PtrInt(const char* label_id,const ImU32* values,int count);
extern void Plot_PlotScatter_U32PtrU32Ptr(const char* label_id,const ImU32* xs,const ImU32* ys,int count);
extern void Plot_PlotScatter_U64PtrInt(const char* label_id,const ImU64* values,int count);
extern void Plot_PlotScatter_U64PtrU64Ptr(const char* label_id,const ImU64* xs,const ImU64* ys,int count);
extern void Plot_PlotScatter_U8PtrInt(const char* label_id,const ImU8* values,int count);
extern void Plot_PlotScatter_U8PtrU8Ptr(const char* label_id,const ImU8* xs,const ImU8* ys,int count);
extern void Plot_PlotScatter_doublePtrInt(const char* label_id,const double* values,int count);
extern void Plot_PlotScatter_doublePtrdoublePtr(const char* label_id,const double* xs,const double* ys,int count);
extern void Plot_PlotShadedG(const char* label_id,ImPlotPoint_getter getter1,void* data1,ImPlotPoint_getter getter2,void* data2,int count);
extern void Plot_PlotShaded_FloatPtrFloatPtrFloatPtr(const char* label_id,const float* xs,const float* ys1,const float* ys2,int count);
extern void Plot_PlotShaded_FloatPtrFloatPtrInt(const char* label_id,const float* xs,const float* ys,int count);
extern void Plot_PlotShaded_FloatPtrInt(const char* label_id,const float* values,int count);
extern void Plot_PlotShaded_S16PtrInt(const char* label_id,const ImS16* values,int count);
extern void Plot_PlotShaded_S16PtrS16PtrInt(const char* label_id,const ImS16* xs,const ImS16* ys,int count);
extern void Plot_PlotShaded_S16PtrS16PtrS16Ptr(const char* label_id,const ImS16* xs,const ImS16* ys1,const ImS16* ys2,int count);
extern void Plot_PlotShaded_S32PtrInt(const char* label_id,const ImS32* values,int count);
extern void Plot_PlotShaded_S32PtrS32PtrInt(const char* label_id,const ImS32* xs,const ImS32* ys,int count);
extern void Plot_PlotShaded_S32PtrS32PtrS32Ptr(const char* label_id,const ImS32* xs,const ImS32* ys1,const ImS32* ys2,int count);
extern void Plot_PlotShaded_S64PtrInt(const char* label_id,const ImS64* values,int count);
extern void Plot_PlotShaded_S64PtrS64PtrInt(const char* label_id,const ImS64* xs,const ImS64* ys,int count);
extern void Plot_PlotShaded_S64PtrS64PtrS64Ptr(const char* label_id,const ImS64* xs,const ImS64* ys1,const ImS64* ys2,int count);
extern void Plot_PlotShaded_S8PtrInt(const char* label_id,const ImS8* values,int count);
extern void Plot_PlotShaded_S8PtrS8PtrInt(const char* label_id,const ImS8* xs,const ImS8* ys,int count);
extern void Plot_PlotShaded_S8PtrS8PtrS8Ptr(const char* label_id,const ImS8* xs,const ImS8* ys1,const ImS8* ys2,int count);
extern void Plot_PlotShaded_U16PtrInt(const char* label_id,const ImU16* values,int count);
extern void Plot_PlotShaded_U16PtrU16PtrInt(const char* label_id,const ImU16* xs,const ImU16* ys,int count);
extern void Plot_PlotShaded_U16PtrU16PtrU16Ptr(const char* label_id,const ImU16* xs,const ImU16* ys1,const ImU16* ys2,int count);
extern void Plot_PlotShaded_U32PtrInt(const char* label_id,const ImU32* values,int count);
extern void Plot_PlotShaded_U32PtrU32PtrInt(const char* label_id,const ImU32* xs,const ImU32* ys,int count);
extern void Plot_PlotShaded_U32PtrU32PtrU32Ptr(const char* label_id,const ImU32* xs,const ImU32* ys1,const ImU32* ys2,int count);
extern void Plot_PlotShaded_U64PtrInt(const char* label_id,const ImU64* values,int count);
extern void Plot_PlotShaded_U64PtrU64PtrInt(const char* label_id,const ImU64* xs,const ImU64* ys,int count);
extern void Plot_PlotShaded_U64PtrU64PtrU64Ptr(const char* label_id,const ImU64* xs,const ImU64* ys1,const ImU64* ys2,int count);
extern void Plot_PlotShaded_U8PtrInt(const char* label_id,const ImU8* values,int count);
extern void Plot_PlotShaded_U8PtrU8PtrInt(const char* label_id,const ImU8* xs,const ImU8* ys,int count);
extern void Plot_PlotShaded_U8PtrU8PtrU8Ptr(const char* label_id,const ImU8* xs,const ImU8* ys1,const ImU8* ys2,int count);
extern void Plot_PlotShaded_doublePtrInt(const char* label_id,const double* values,int count);
extern void Plot_PlotShaded_doublePtrdoublePtrInt(const char* label_id,const double* xs,const double* ys,int count);
extern void Plot_PlotShaded_doublePtrdoublePtrdoublePtr(const char* label_id,const double* xs,const double* ys1,const double* ys2,int count);
extern void Plot_PlotStairsG(const char* label_id,ImPlotPoint_getter getter,void* data,int count);
extern void Plot_PlotStairs_FloatPtrFloatPtr(const char* label_id,const float* xs,const float* ys,int count);
extern void Plot_PlotStairs_FloatPtrInt(const char* label_id,const float* values,int count);
extern void Plot_PlotStairs_S16PtrInt(const char* label_id,const ImS16* values,int count);
extern void Plot_PlotStairs_S16PtrS16Ptr(const char* label_id,const ImS16* xs,const ImS16* ys,int count);
extern void Plot_PlotStairs_S32PtrInt(const char* label_id,const ImS32* values,int count);
extern void Plot_PlotStairs_S32PtrS32Ptr(const char* label_id,const ImS32* xs,const ImS32* ys,int count);
extern void Plot_PlotStairs_S64PtrInt(const char* label_id,const ImS64* values,int count);
extern void Plot_PlotStairs_S64PtrS64Ptr(const char* label_id,const ImS64* xs,const ImS64* ys,int count);
extern void Plot_PlotStairs_S8PtrInt(const char* label_id,const ImS8* values,int count);
extern void Plot_PlotStairs_S8PtrS8Ptr(const char* label_id,const ImS8* xs,const ImS8* ys,int count);
extern void Plot_PlotStairs_U16PtrInt(const char* label_id,const ImU16* values,int count);
extern void Plot_PlotStairs_U16PtrU16Ptr(const char* label_id,const ImU16* xs,const ImU16* ys,int count);
extern void Plot_PlotStairs_U32PtrInt(const char* label_id,const ImU32* values,int count);
extern void Plot_PlotStairs_U32PtrU32Ptr(const char* label_id,const ImU32* xs,const ImU32* ys,int count);
extern void Plot_PlotStairs_U64PtrInt(const char* label_id,const ImU64* values,int count);
extern void Plot_PlotStairs_U64PtrU64Ptr(const char* label_id,const ImU64* xs,const ImU64* ys,int count);
extern void Plot_PlotStairs_U8PtrInt(const char* label_id,const ImU8* values,int count);
extern void Plot_PlotStairs_U8PtrU8Ptr(const char* label_id,const ImU8* xs,const ImU8* ys,int count);
extern void Plot_PlotStairs_doublePtrInt(const char* label_id,const double* values,int count);
extern void Plot_PlotStairs_doublePtrdoublePtr(const char* label_id,const double* xs,const double* ys,int count);
extern void Plot_PlotStems_FloatPtrFloatPtr(const char* label_id,const float* xs,const float* ys,int count);
extern void Plot_PlotStems_FloatPtrInt(const char* label_id,const float* values,int count);
extern void Plot_PlotStems_S16PtrInt(const char* label_id,const ImS16* values,int count);
extern void Plot_PlotStems_S16PtrS16Ptr(const char* label_id,const ImS16* xs,const ImS16* ys,int count);
extern void Plot_PlotStems_S32PtrInt(const char* label_id,const ImS32* values,int count);
extern void Plot_PlotStems_S32PtrS32Ptr(const char* label_id,const ImS32* xs,const ImS32* ys,int count);
extern void Plot_PlotStems_S64PtrInt(const char* label_id,const ImS64* values,int count);
extern void Plot_PlotStems_S64PtrS64Ptr(const char* label_id,const ImS64* xs,const ImS64* ys,int count);
extern void Plot_PlotStems_S8PtrInt(const char* label_id,const ImS8* values,int count);
extern void Plot_PlotStems_S8PtrS8Ptr(const char* label_id,const ImS8* xs,const ImS8* ys,int count);
extern void Plot_PlotStems_U16PtrInt(const char* label_id,const ImU16* values,int count);
extern void Plot_PlotStems_U16PtrU16Ptr(const char* label_id,const ImU16* xs,const ImU16* ys,int count);
extern void Plot_PlotStems_U32PtrInt(const char* label_id,const ImU32* values,int count);
extern void Plot_PlotStems_U32PtrU32Ptr(const char* label_id,const ImU32* xs,const ImU32* ys,int count);
extern void Plot_PlotStems_U64PtrInt(const char* label_id,const ImU64* values,int count);
extern void Plot_PlotStems_U64PtrU64Ptr(const char* label_id,const ImU64* xs,const ImU64* ys,int count);
extern void Plot_PlotStems_U8PtrInt(const char* label_id,const ImU8* values,int count);
extern void Plot_PlotStems_U8PtrU8Ptr(const char* label_id,const ImU8* xs,const ImU8* ys,int count);
extern void Plot_PlotStems_doublePtrInt(const char* label_id,const double* values,int count);
extern void Plot_PlotStems_doublePtrdoublePtr(const char* label_id,const double* xs,const double* ys,int count);
extern void Plot_PlotText(const char* text,double x,double y);
extern void Plot_PlotToPixels_PlotPoInt(ImVec2* pOut,const ImPlotPoint plt);
extern void Plot_PlotToPixels_double(ImVec2* pOut,double x,double y);
extern void Plot_PopColormap();
extern void Plot_PopStyleColor();
extern void Plot_PopStyleVar();
extern void Plot_PushPlotClipRect();
extern ImPlotItem* Plot_RegisterOrGetItem(const char* label_id,ImPlotItemFlags flags);
extern void Plot_SampleColormap(ImVec4* pOut,float t);
extern void Plot_SetNextAxesLimits(double x_min,double x_max,double y_min,double y_max);
extern void Plot_SetNextAxisLimits(ImAxis axis,double v_min,double v_max);
extern void Plot_SetNextErrorBarStyle();
extern void Plot_SetNextFillStyle();
extern void Plot_SetNextLineStyle();
extern void Plot_SetNextMarkerStyle();
extern void Plot_SetupAxes(const char* x_label,const char* y_label);
extern void Plot_SetupAxesLimits(double x_min,double x_max,double y_min,double y_max);
extern void Plot_SetupAxis(ImAxis axis);
extern void Plot_SetupAxisFormat_PlotFormatter(ImAxis axis,ImPlotFormatter formatter);
extern void Plot_SetupAxisLimits(ImAxis axis,double v_min,double v_max);
extern void Plot_SetupAxisScale_PlotTransform(ImAxis axis,ImPlotTransform forward,ImPlotTransform inverse);
extern void Plot_SetupAxisTicks_double(ImAxis axis,double v_min,double v_max,int n_ticks);
extern void Plot_SetupAxisTicks_doublePtr(ImAxis axis,const double* values,int n_ticks);
extern void Plot_SetupLegend(ImPlotLocation location);
extern void Plot_SetupMouseText(ImPlotLocation location);
extern void Plot_ShowAltLegend(const char* title_id);
extern void Plot_ShowAxisContextMenu(ImPlotAxis* axis,ImPlotAxis* equal_axis);
extern bool Plot_ShowDatePicker(const char* id,int* level,ImPlotTime* t);
extern void Plot_ShowDemoWindow();
extern void Plot_ShowMetricsWindow();
extern void Plot_ShowStyleEditor();
extern void Plot_StyleColorsAuto();
extern void Plot_StyleColorsClassic();
extern void Plot_StyleColorsDark();
extern void Plot_StyleColorsLight();
extern void Plot_TagX_Bool(double x,const ImVec4 col);
extern void Plot_TagY_Bool(double y,const ImVec4 col);

#ifdef __cplusplus
}
#endif
